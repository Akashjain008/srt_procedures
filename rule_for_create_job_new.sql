CREATE OR REPLACE FUNCTION public.rule_for_create_job_new(arrayjobs text)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
 DECLARE recordCheck RECORD;                                                                                                                                                                                                    
 DECLARE job RECORD;                                                                                                                                                                                                            
 DECLARE adderror RECORD;                                                                                                                                                                                                       
 DECLARE error RECORD;                                                                                                                                                                                                          
                                                                                                                                                                                                                                
 DECLARE op_outputjson text := '';                                                                                                                                                                                              
 DECLARE count_damagedIMEI integer;                                                                                                                                                                                             
 DECLARE dbflag boolean;                                                                                                                                                                                                        
 DECLARE errorList json:= '[]';                                                                                                                                                                                                 
 DECLARE label_print_flag boolean;                                                                                                                                                                                              
 DECLARE count_flag integer;                                                                                                                                                                                                    
 DECLARE check_insuranceCoverage integer;                                                                                                                                                                                       
 DECLARE check_insuranceCoverageCode integer;                                                                                                                                                                                   
 -- DECLARE check_rsp_id integer;                                                                                                                                                                                                        
 -- DECLARE check_transaction_code integer;                                                                                                                                                                                              
 -- DECLARE check_claim_type integer;                                                                                                                                                                                                    
 Begin                                                                                                                                                                                                                          
                                                                                                                                                                                                                                
         -- Create temp table to hold json data                                                                                                                                                                                 
         drop table if exists tmp_createjobjsondata;                                                                                                                                                                            
         create temp table tmp_createjobjsondata("id" serial,"claimId" text, "claimLineId" text, "claimType" text,"customerName" text,"customerEmail" text, "customerId" text,                                                  
                 "customerHomePhone" text,"customerMobile" text,"customerAddressLine1" text,"customerAddressLine2" text,"customerCity" text,"customerZip" text,                                                                 
                 "customerState" text,"customerCountry" text,"damagedSku" text,"damagedModel" text,"damagedImei" text, "damagedImei2" text,"damagedSerialNumber" text,                                                          
                 "repairStatus" integer, "repairStatus2" integer,"deviceDateOfPurchase" timestamp with time zone,"deductibleRequired" boolean,"accidentValid" boolean,"docImeiOk" boolean,                                      
                 "docInvoiceNumberOk" boolean,"docInvoicePrice" boolean,"docInvoiceDateOk" boolean,"deviceIrrepairable" boolean,                                                                                                
                 "deviceInvoiceNumber" text,"certificateNumber" text,"insuranceCoverage" text,"accidentDescription" text,"deviceBer" boolean,                                                                                   
                 "accidentDate" timestamp with time zone,"complaintDate" date,"customerComplaintCodePrimary" json,                                                                                                              
                 "customerComplaintCodeSecondary" json,"insuranceStartDate" timestamp with time zone,"jobCreationDate" timestamp with time zone,                                                                                
                 "deviceManufactureDate" timestamp with time zone,"oem" text,"popSupplier" text,"productType" text,                                                                                                             
                 "project" text,"providerOrCarrier" text,"partnerId" text,"errorList" text,                                                                                                                                     
                 "insertedIntoDb" boolean,"uniqueId" text, "custom_1" text, "custom_2" text, "custom_3" text, "custom_4" text, "custom_5" text,                                                                                 
                 "custom_6" text, "custom_7" text, "custom_8" text, "custom_9" text, "custom_10" text,                                                                                                                          
                 "repairTimestamp" timestamp with time zone, "reportDate" timestamp with time zone, "returnDate" timestamp with time zone,                                                                                      
                 "transactionCode" integer, "deductible" json, "accidentId" text, "additionalService" text, "claimCreationDate" timestamp with time zone,                                                                       
                 "collectDeductible" boolean, "collectDevicePackaging" boolean, "commentary" text, "customerPassportCountry" text,                                                                                              
                 "customerPassportNumber" text, "damagedType" text, "deviceConfiguration" text, "deviceValue" numeric(18,2), "deviceValueCurrency" text,                                                                        
                 "employeeNumber" text, "logisticInBoundShipmentType" integer, "insuranceBroker" text, "insuranceEndDate" timestamp with time zone,                                                                             
                 "loanPhone" boolean, "maxRepairCost" numeric(18,2), "maxRepairCostCurrency" text, "logisticOutBoundShipmentType" integer,                                                                                      
                 "pickupDate" timestamp with time zone, "replacementModel" text, "replacementOem" text, "replacementSku" text,                                                                                                  
                 "replacementType" text, "salePrice" numeric(18,2), "salePriceCurrency" text, "softwareIn" text, "specialInstructions" text,                                                                                    
                 "taxId" text, "transportInsr" boolean, "transportInsrCurrency" text, "transportInsrValue" numeric(18,2), "warranty" boolean,                                                                                   
                 "partnerJobNumber" text, "logisticInBoundAwb" text,"logisticOutBoundAwb" text,"logisticInBoundCourierName" text,"logisticOutBoundCourierName" text, "cid" boolean,                                             
                 "billingCustomerAddressLine1" text,"billingCustomerAddressLine2" text,"billingCustomerCity" text,"billingCustomerState" text,"billingCustomerZip" text,"billingCustomerCountry" text,                          
                 "insuranceProductName" text, "insurancePolicyNumber" text, "street" text, "streetNumber" text, "district" text, "comments" text,                                                                                        
                 "billingStreet" text, "billingStreetNumber" text, "billingDistrict" text, "customerLanguage" text                                                                                                                       
                 , "expectedTat" text, "logisticInBoundCourierType" text, "logisticOutBoundCourierType" text);                                                                                                                  
                                                                                                                                                                                                                                
         drop table if exists tmp_errorlistjson;                                                                                                                                                                                
         create temp table tmp_errorlistjson("id" serial,"uniqueId" text,"errorCode" text, "errorMessage" text, "errorColumn" text, "errorType" text, "successFlag" boolean );                                                  
                                                                                                                                                                                                                                
         insert into tmp_createjobjsondata("claimId" , "claimLineId","claimType" ,"customerName" ,"customerEmail" , "customerId",                                                                                               
                 "customerHomePhone" ,"customerMobile" ,"customerAddressLine1" ,"customerAddressLine2" ,"customerCity" ,"customerZip" ,                                                                                         
                 "customerState" ,"customerCountry" ,"damagedSku" ,"damagedModel" ,"damagedImei" , "damagedImei2" ,"damagedSerialNumber" ,                                                                                      
                 "repairStatus","repairStatus2" ,"deviceDateOfPurchase","deductibleRequired" ,"accidentValid","docImeiOk",                                                                                                      
                 "docInvoiceNumberOk" ,"docInvoicePrice","docInvoiceDateOk" ,"deviceIrrepairable" ,                                                                                                                             
                 "deviceInvoiceNumber" ,"certificateNumber" ,"insuranceCoverage" ,"accidentDescription", "deviceBer",                                                                                                           
                 "accidentDate","complaintDate" ,"customerComplaintCodePrimary" ,                                                                                                                                               
                 "customerComplaintCodeSecondary" ,"insuranceStartDate","jobCreationDate",                                                                                                                                      
                 "deviceManufactureDate","oem" ,"popSupplier" ,"productType" ,                                                                                                                                                  
                 "project" ,"providerOrCarrier" ,"partnerId" ,"errorList" ,                                                                                                                                                     
                 "insertedIntoDb","uniqueId", "custom_1", "custom_2", "custom_3", "custom_4", "custom_5", "custom_6",                                                                                                           
                 "custom_7", "custom_8", "custom_9", "custom_10",                                                                                                                                                               
                 "repairTimestamp", "reportDate", "returnDate", "transactionCode", "deductible", "accidentId", "additionalService", "claimCreationDate",                                                                        
                 "collectDeductible", "collectDevicePackaging", "commentary", "customerPassportCountry", "customerPassportNumber", "damagedType",                                                                               
                 "deviceConfiguration", "deviceValue", "deviceValueCurrency", "employeeNumber", "logisticInBoundShipmentType", "insuranceBroker",                                                                               
                 "insuranceEndDate", "loanPhone", "maxRepairCost", "maxRepairCostCurrency", "logisticOutBoundShipmentType", "pickupDate", "replacementModel",                                                                   
                 "replacementOem", "replacementSku", "replacementType", "salePrice", "salePriceCurrency", "softwareIn", "specialInstructions",                                                                                  
                 "taxId", "transportInsr", "transportInsrCurrency", "transportInsrValue", "warranty", "partnerJobNumber",                                                                                                       
                 "logisticInBoundAwb","logisticOutBoundAwb","logisticInBoundCourierName","logisticOutBoundCourierName", "cid",                                                                                                  
                 "billingCustomerAddressLine1","billingCustomerAddressLine2","billingCustomerCity","billingCustomerState","billingCustomerZip","billingCustomerCountry",                                                        
                 "insuranceProductName","insurancePolicyNumber", "street", "streetNumber", "district", "comments",                                                                                                                       
                 "billingStreet", "billingStreetNumber", "billingDistrict", "customerLanguage"                                                                                                                                           
                 , "expectedTat", "logisticInBoundCourierType", "logisticOutBoundCourierType")                                                                                                                                  
         select * from json_to_recordset(arrayjobs::json) as ("claimId" text, "claimLineId" text, "claimType" text,"customerName" text,"customerEmail" text, "customerId" text,                                                 
                 "customerHomePhone" text,"customerMobile" text,"customerAddressLine1" text,"customerAddressLine2" text,"customerCity" text,"customerZip" text,                                                                 
                 "customerState" text,"customerCountry" text,"damagedSku" text,"damagedModel" text,"damagedImei" text,"damagedImei2" text,"damagedSerialNumber" text,                                                           
                 "repairStatus" integer, "repairStatus2" integer,"deviceDateOfPurchase" timestamp with time zone,"deductibleRequired" boolean,"accidentValid" boolean,"docImeiOk" boolean,                                      
                 "docInvoiceNumberOk" boolean,"docInvoicePrice" boolean,"docInvoiceDateOk" boolean,"deviceIrrepairable" boolean,                                                                                                
                 "deviceInvoiceNumber" text,"certificateNumber" text,"insuranceCoverage" text,"accidentDescription" text,"deviceBer" boolean,                                                                                   
                 "accidentDate" timestamp with time zone,"complaintDate" date,"customerComplaintCodePrimary" json,                                                                                                              
                 "customerComplaintCodeSecondary" json,"insuranceStartDate" timestamp with time zone,"jobCreationDate" timestamp with time zone,                                                                                
                 "deviceManufactureDate" timestamp with time zone,"oem" text,"popSupplier" text,"productType" text,                                                                                                             
                 "project" text,"providerOrCarrier" text,"partnerId" text,"errorList" text,                                                                                                                                     
                 "insertedIntoDb" boolean,"uniqueId" text, "custom_1" text, "custom_2" text, "custom_3" text, "custom_4" text, "custom_5" text,                                                                                 
                 "custom_6" text, "custom_7" text, "custom_8" text, "custom_9" text, "custom_10" text,                                                                                                                          
                 "repairTimestamp" timestamp with time zone, "reportDate" timestamp with time zone, "returnDate" timestamp with time zone,                                                                                      
                 "transactionCode" integer, "deductible" json, "accidentId" text, "additionalService" text, "claimCreationDate" timestamp with time zone,                                                                       
                 "collectDeductible" boolean, "collectDevicePackaging" boolean, "commentary" text, "customerPassportCountry" text,                                                                                              
                 "customerPassportNumber" text, "damagedType" text, "deviceConfiguration" text, "deviceValue" numeric(18,2), "deviceValueCurrency" text,                                                                        
                 "employeeNumber" text, "logisticInBoundShipmentType" integer, "insuranceBroker" text, "insuranceEndDate" timestamp with time zone,                                                                             
                 "loanPhone" boolean, "maxRepairCost" numeric(18,2), "maxRepairCostCurrency" text, "logisticOutBoundShipmentType" integer,                                                                                      
                 "pickupDate" timestamp with time zone, "replacementModel" text, "replacementOem" text, "replacementSku" text,                                                                                                  
                 "replacementType" text, "salePrice" numeric(18,2), "salePriceCurrency" text, "softwareIn" text, "specialInstructions" text,                                                                                    
                 "taxId" text, "transportInsr" boolean, "transportInsrCurrency" text, "transportInsrValue" numeric(18,2), "warranty" boolean, "partnerJobNumber" text,                                                          
                 "logisticInBoundAwb" text,"logisticOutBoundAwb" text,"logisticInBoundCourierName" text,"logisticOutBoundCourierName" text, "cid" boolean,                                                                      
                 "billingCustomerAddressLine1" text,"billingCustomerAddressLine2" text,"billingCustomerCity" text,"billingCustomerState" text,"billingCustomerZip" text,"billingCustomerCountry" text,                          
                 "insuranceProductName" text,"insurancePolicyNumber" text, "street" text, "streetNumber" text, "district" text, "comments" text,                                                                                         
                 "billingStreet" text, "billingStreetNumber" text, "billingDistrict" text, "customerLanguage" text                                                                                                                       
                 , "expectedTat" text, "logisticInBoundCourierType" text, "logisticOutBoundCourierType" text);                                                                                                                  
                                                                                                                                                                                                                                
         FOR job IN (SELECT * FROM tmp_createjobjsondata)                                                                                                                                                                       
         LOOP                                                                                                                                                                                                                   
                                                                                                                                                                                                                                
                 INSERT INTO tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                               
                 SELECT * from json_to_recordset(job."errorList"::json) as ("uniqueId" text,"errorCode" text, "errorMessage" text, "errorColumn" text, "errorType" text, "successFlag" boolean);                                
                                                                                                                                                                                                                                
                 FOR recordCheck IN (SELECT * FROM tr_rule where is_active=true and db_level=true and event_type ='create' order by 1)                                                                                          
                 LOOP                                                                                                                                                                                                           
                         --=======check damagedIMEI job is already open or not in system========                                                                                                                                
                         if (recordCheck."code" = 'SRTI00002') then                                                                                                                                                             
                                 if (job."damagedImei" is not null and job."damagedImei" != '') then                                                                                                                            
                                                                                                                                                                                                                                
                                         count_flag := (select count(imei_number_in) as value from job_head_new where imei_number_in = job."damagedImei" and is_active=true and repair_status not in ('90','100'));             
                                                                                                                                                                                                                                
                                         if (count_flag > 0) then                                                                                                                                                               
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         End if;                                                                                                                                                                                
                                 End if;                                                                                                                                                                                        
                         End if;                                                                                                                                                                                                
                         --=======check damagedIMEI job is already open or not in system========                                                                                                                                
                         if (recordCheck."code" = 'SRTI10050') then                                                                                                                                                             
                                 if (job."damagedImei" is not null and job."damagedImei" != '') then                                                                                                                            
                                                                                                                                                                                                                                
                                         count_flag := (select count(imei_number_in) as value from job_head_new where imei_number_in = job."damagedImei" and is_active=true and repair_status not in ('80','90','100'));        
                                                                                                                                                                                                                                
                                         if (count_flag > 0) then                                                                                                                                                               
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         End if;                                                                                                                                                                                
                                 End if;                                                                                                                                                                                        
                         End if;                                                                                                                                                                                                
                         --=======check customerCountry is avialble is or not========                                                                                                                                           
                         if (recordCheck."code" = 'SRTI00005') then                                                                                                                                                             
                                 if (job."customerCountry" is not null and job."customerCountry" != '') then                                                                                                                    
                                                                                                                                                                                                                                
                                         label_print_flag := (select label_print from mst_rsp rsp                                                                                                                               
                                                                 join mst_country cun on rsp.rsp_iso_code = cun.iso_code                                                                                                        
                                                                 where rsp_iso_code = job."customerCountry" and                                                                                                                 
                                                                 rsp.is_active = true and label_print is not null limit 1);                                                                                                     
                                                                                                                                                                                                                                
                                         if (label_print_flag = false) then                                                                                                                                                     
                                                 --give error no customer country data found;                                                                                                                                   
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                                                                                                                                                                                                                
                                         end if;                                                                                                                                                                                
                                                                                                                                                                                                                                
                                 End if;                                                                                                                                                                                        
                         End if;                                                                                                                                                                                                
                         --=======check label_print yes then other customer details can't be left blank========                                                                                                                 
                         if (recordCheck."code" = 'SRTI00006' ) then                                                                                                                                                            
                                 if (job."customerCountry" is not null and job."customerCountry" != '') then                                                                                                                    
                                         label_print_flag := (select label_print from mst_rsp rsp                                                                                                                               
                                                                 join mst_country cun on rsp.rsp_iso_code = cun.iso_code                                                                                                        
                                                                 where rsp_iso_code = job."customerCountry" and                                                                                                                 
                                                                 rsp.is_active = true and label_print is not null limit 1);                                                                                                     
                                         if (label_print_flag = true) then                                                                                                                                                      
                                                 if ((job."customerName" is null or job."customerName" ='') or (job."customerAddressLine1" is null or job."customerAddressLine1" ='') or                                        
                                                 (job."customerZip" is null or job."customerZip" ='') or (job."customerMobile" is null or job."customerMobile" ='')) then                                                       
                                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                       
                                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                   
                                                 end if;                                                                                                                                                                        
                                         end if;                                                                                                                                                                                
                                 End if;                                                                                                                                                                                        
                         ENd if;                                                                                                                                                                                                
                         --=======check Insurance coverage should be in routing table or not========                                                                                                                            
                         if (recordCheck."code" = 'SRTI00017') then                                                                                                                                                             
                                 if (job."insuranceCoverage" is not null and job."insuranceCoverage" != '') then                                                                                                                
                                         --=======check Insurance coverage name in table================                                                                                                                        
                                         check_insuranceCoverage := (select count(name) from mst_repair_program where lower(name) = lower(job."insuranceCoverage") and is_active = true limit 1);                               
                                         if (check_insuranceCoverage = 0) then                                                                                                                                                  
                                                 --=======check Insurance coverage code in table================                                                                                                                
                                                 check_insuranceCoverageCode := (select count(code) from mst_repair_program where code = job."insuranceCoverage" and is_active = true limit 1);                                 
                                                 if (check_insuranceCoverageCode = 0) then                                                                                                                                      
                                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                       
                                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                   
                                                 END IF;                                                                                                                                                                        
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --"SRTI00019"                                                                                                                                                                                          
                         --=======check repair Service Partner Id rule========                                                                                                                                                  
                         if (recordCheck."code" = 'SRTI00019') THEN                                                                                                                                                             
                                 if (job."partnerId" is not null and job."partnerId" != '') then                                                                                                                                
                                         --=======check partnerId in table================                                                                                                                                      
                                         if ((select * from public.check_in_routing_table('mst_rsp','rsp_id',ARRAY[job."partnerId"])) = 0) then                                                                                          
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                                                                                                                                                                                                                         
                                         -- check_rsp_id := (select count(1) from mst_rsp where lower(rsp_id) = lower(job."partnerId") and is_active = true);                                                                            
                                         -- if (check_rsp_id = 0) then                                                                                                                                                                   
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                        
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                    
                                         -- END IF;                                                                                                                                                                                      
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check claimCreationDate & deviceDateOfPurchase rule========                                                                                                                                   
                         IF (recordCheck."code" = 'SRTI10009') THEN                                                                                                                                                             
                                 IF (job."claimCreationDate" is not null and job."deviceDateOfPurchase" is not null) THEN                                                                                                       
                                         --=======check claimCreationDate & deviceDateOfPurchase in table================                                                                                                       
                                         IF ((job."claimCreationDate"::date) < (job."deviceDateOfPurchase"::date)) THEN                                                                                                         
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check claim Creation Date rule========                                                                                                                                                        
                         IF (recordCheck."code" = 'SRTI10010') THEN                                                                                                                                                             
                                 IF (job."claimCreationDate" is not null) THEN                                                                                                                                                  
                                         --RAISE NOTICE 'job.claimCreationDate::date%', job."claimCreationDate"::date;                                                                                                          
                                         --=======check claimCreationDate in table================                                                                                                                              
                                         IF ((job."claimCreationDate"::date) > (now()::date)) THEN                                                                                                                              
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check device Manufacture Date rule========                                                                                                                                                    
                         IF (recordCheck."code" = 'SRTI10011') THEN                                                                                                                                                             
                                 IF (job."deviceManufactureDate" is not null) THEN                                                                                                                                              
                                         --=======check device Manufacture Date in table================                                                                                                                        
                                         IF ((job."deviceManufactureDate"::date) > (now()::date)) THEN                                                                                                                          
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check device Date Of Purchase rule========                                                                                                                                                    
                         IF (recordCheck."code" = 'SRTI10012') THEN                                                                                                                                                             
                                 IF (job."deviceDateOfPurchase" is not null) THEN                                                                                                                                               
                                         --=======check device Date Of Purchase  in table================                                                                                                                       
                                         IF ((job."deviceDateOfPurchase"::date) > (now()::date)) THEN                                                                                                                           
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check pickupDate rule========                                                                                                                                                                 
                         IF (recordCheck."code" = 'SRTI10013') THEN                                                                                                                                                             
                                 IF (job."pickupDate" is not null) THEN                                                                                                                                                         
                                 --=======check pickupDate in table================                                                                                                                                             
                                         IF ((job."pickupDate"::date) > (now()::date)) THEN                                                                                                                                     
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check deviceManufactureDate & deviceDateOfPurchase rule========                                                                                                                               
                         IF (recordCheck."code" = 'SRTI10014') THEN                                                                                                                                                             
                                 IF (job."deviceManufactureDate" is not null and job."deviceDateOfPurchase" is not null) THEN                                                                                                   
                                         --=======check deviceManufactureDate & deviceDateOfPurchase in table================                                                                                                   
                                         IF ((job."deviceManufactureDate"::date) >= (job."deviceDateOfPurchase"::date)) THEN                                                                                                    
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check transaction code rule========                                                                                                                                                           
                         if (recordCheck."code" = 'SRTI10042') THEN                                                                                                                                                             
                                 if (job."transactionCode" is not null) then                                                                                                                                                    
                                         --=======check transactionCode in table================                                                                                                                                
                                         if ((select * from public.check_in_routing_table('mst_transaction_code','b2x_transaction_code',ARRAY[job."transactionCode"::text])) = 0) then                                                   
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                                                                                                                                                                                                                         
                                         --check_transaction_code := (select count(1) from mst_transaction_code where b2x_transaction_code = job."transactionCode" and is_active = true);                                                
                                         --if (check_transaction_code = 0) then                                                                                                                                                          
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                        
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                    
                                         --END IF;                                                                                                                                                                                       
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check claim type rule========                                                                                                                                                                 
                         if (recordCheck."code" = 'SRTI10043') THEN                                                                                                                                                             
                                 if (job."claimType" is not null) then                                                                                                                                                          
                                         if ((select * from public.check_in_routing_table('mst_claim_type','claim_code',ARRAY[job."claimType"])) = 0) then                                                                               
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                                                                                                                                                                                                                         
                                         --=======check claimType in table================                                                                                                                                               
                                         -- check_claim_type := (select count(1) from mst_claim_type where lower(claim_code) = lower(job."claimType") and is_active = true);                                                             
                                         -- if (check_claim_type = 0) then                                                                                                                                                               
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                        
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                    
                                         -- END IF;                                                                                                                                                                                      
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check logistic InBound Shipment Type rule========                                                                                                                                             
                         if (recordCheck."code" = 'SRTI00011') THEN                                                                                                                                                             
                                 if (job."logisticInBoundShipmentType" is not null) then                                                                                                                                        
                                         --=======check claimType in table================                                                                                                                                      
                                         if not exists (select logistics_code from mst_logistic_status where logistics_code::integer = job."logisticInBoundShipmentType" and logistics_type = 'Inbound' and is_active = true) then
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                         --=======check repairStatus rule========                                                                                                                                                               
                         if (recordCheck."code" = 'SRTI00014') THEN                                                                                                                                                             
                                 if (job."repairStatus" is not null) then                                                                                                                                                       
                                         if ((select * from public.check_in_routing_table('mst_repair_status','b2x_code',ARRAY[job."repairStatus"::text])) = 0) then                                                                     
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                        
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                    
                                         END IF;                                                                                                                                                                                         
                                                                                                                                                                                                                                         
                                         -- if not exists (select b2x_code from mst_repair_status where b2x_code::integer = job."repairStatus" and is_active = true) then                                                                
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                        
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                    
                                         -- END IF;                                                                                                                                                                                      
                                 END IF;                                                                                                                                                                                                 
                         END IF;                                                                                                                                                                                                         
                                                                                                                                                                                                                                         
                         -- customer complaint primary check                                                                                                                                                                             
                         if (recordCheck."code" = 'SRTI10046') then                                                                                                                                                                      
                                 if (job."customerComplaintCodePrimary" is not null) then                                                                                                                                                
                                         if ((select * from public.check_in_routing_table('mst_customer_complaint','b2x_code',(select array_agg(elm) from  json_array_elements_text(job."customerComplaintCodePrimary") as elm))) = 0) then
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                        
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                    
                                         END IF;                                                                                                                                                                                         
                                 END IF;                                                                                                                                                                                                 
                         END IF;                                                                                                                                                                                                         
                                                                                                                                                                                                                                         
                         -- second repair status check                                                                                                                                                                                   
                         if (recordCheck."code" = 'SRTI00047') THEN                                                                                                                                                                      
                                 if (job."repairStatus2" is not null) then                                                                                                                                                               
                                         if ((select * from public.check_in_routing_table('mst_second_status','b2x_code',ARRAY[job."repairStatus2"::text])) = 0) then                                                                    
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                        
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                    
                                         END IF;                                                                                                                                                                                         
                                 END IF;                                                                                                                                                                                                 
                         END IF;                                                                                                                                                                                                         
                                                                                                                                                                                                                                         
                         -- oem check                                                                                                                                                                                                    
                         if (recordCheck."code" = 'SRTI00048') THEN                                                                                                                                                                      
                                 if (job."oem" is not null) then                                                                                                                                                                         
                                         if ((select * from public.check_in_routing_table('mst_oem','oem_code',ARRAY[job."oem"])) = 0) then                                                                                              
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                         END IF;                                                                                                                                                                                
                                 END IF;                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                
                 END LOOP;                                                                                                                                                                                                      
                 --=============insert all the error list in the variable and send to the response=============                                                                                                                 
                 errorList:= (select array_to_json(array_agg(row_to_json(row)))                                                                                                                                                 
                             from (                                                                                                                                                                                             
                                 select "errorCode", "errorMessage", "errorColumn", "errorType", "successFlag"                                                                                                                  
                                 from tmp_errorlistjson                                                                                                                                                                         
                             ) row);                                                                                                                                                                                            
                                                                                                                                                                                                                                
                 op_outputjson := op_outputjson || ((select row_to_json(row) from (                                                                                                                                             
                                 select job."claimId", job."claimLineId" ,job."claimType",job."customerName",job."customerEmail", job."customerId",                                                                             
                                 job."customerHomePhone" ,job."customerMobile" ,job."customerAddressLine1" ,job."customerAddressLine2" ,job."customerCity" ,                                                                    
                                 job."customerZip" ,job."customerState" ,job."customerCountry" ,job."damagedSku" ,job."damagedModel" ,job."damagedImei" ,job."damagedImei2" ,                                                   
                                 job."damagedSerialNumber",job."repairStatus", job."repairStatus2",job."deviceDateOfPurchase",job."deductibleRequired" ,job."accidentValid",                                                    
                                 job."docImeiOk" ,job."docInvoiceNumberOk",job."docInvoicePrice" ,job."docInvoiceDateOk",                                                                                                       
                                 job."deviceIrrepairable" ,job."deviceInvoiceNumber" ,job."certificateNumber" ,job."insuranceCoverage" ,job."accidentDescription" ,                                                             
                                 job."deviceBer",job."accidentDate",job."complaintDate" ,job."customerComplaintCodePrimary",                                                                                                    
                                 job."customerComplaintCodeSecondary",job."insuranceStartDate",job."jobCreationDate",job."deviceManufactureDate",job."oem" ,job."popSupplier" ,                                                 
                                 job."productType" ,job."project" ,job."providerOrCarrier" ,job."partnerId",                                                                                                                    
                                 job."custom_1", job."custom_2", job."custom_3", job."custom_4", job."custom_5", job."custom_6",                                                                                                
                                 job."custom_7", job."custom_8", job."custom_9", job."custom_10", errorList as "errorList", job."insertedIntoDb",                                                                               
                                 job."repairTimestamp", job."reportDate", job."returnDate", job."transactionCode", job."deductible",                                                                                            
                                 job."accidentId", job."additionalService", job."claimCreationDate", job."collectDeductible", job."collectDevicePackaging",                                                                     
                                 job."commentary", job."customerPassportCountry", job."customerPassportNumber", job."damagedType", job."deviceConfiguration",                                                                   
                                 job."deviceValue", job."deviceValueCurrency", job."employeeNumber", job."logisticInBoundShipmentType", job."insuranceBroker",                                                                  
                                 job."insuranceEndDate", job."loanPhone", job."maxRepairCost", job."maxRepairCostCurrency", job."logisticOutBoundShipmentType",                                                                 
                                 job."pickupDate", job."replacementModel", job."replacementOem", job."replacementSku", job."replacementType",                                                                                   
                                 job."salePrice", job."salePriceCurrency", job."softwareIn", job."specialInstructions", job."taxId",                                                                                            
                                 job."transportInsr", job."transportInsrCurrency", job."transportInsrValue", job."warranty", job."partnerJobNumber",                                                                            
                                 job."logisticInBoundAwb", job."logisticOutBoundAwb", job."logisticInBoundCourierName", job."logisticOutBoundCourierName", job."cid",                                                           
                                 job."billingCustomerAddressLine1",job."billingCustomerAddressLine2",job."billingCustomerCity",job."billingCustomerState",job."billingCustomerZip",job."billingCustomerCountry",                
                                 job."insuranceProductName",job."insurancePolicyNumber", job."street", job."streetNumber", job."district", job."comments",                                                                               
                                 job."billingStreet", job."billingStreetNumber", job."billingDistrict", job."customerLanguage"                                                                                                           
                                 , job."expectedTat", job."logisticInBoundCourierType", job."logisticOutBoundCourierType")                                                                                                      
                         row) || ',');                                                                                                                                                                                          
         END LOOP;                                                                                                                                                                                                              
         --RAISE NOTICE '%', op_outputjson;                                                                                                                                                                                     
         return trim(trailing ',' from op_outputjson);                                                                                                                                                                          
 End
$function$
