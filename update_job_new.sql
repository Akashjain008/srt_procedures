CREATE OR REPLACE FUNCTION public.update_job_new(arrayjobs text, filename text, b2xreqid text, "Channel" text, username text, userid integer)
 RETURNS TABLE("claimId" text, "claimLineId" text, "damagedImei" text, "errorList" json, "insertedIntoDb" boolean, "jobNumber" text, project text, "repairStatus" integer, "repairStatus2" integer)
 LANGUAGE plpgsql
AS $function$
 declare update_Job record;                                                                                                                                                                                                                                                 
 declare disable_job record;                                                                                                                                                                                                                                                
 declare get_problemFoundCode record;                                                                                                                                                                                                                                       
 declare get_actionCode record;                                                                                                                                                                                                                                             
 declare get_materialAwaiting record;                                                                                                                                                                                                                                       
 declare get_materialUsed record;                                                                                                                                                                                                                                           
 declare get_deductible record;                                                                                                                                                                                                                                             
 declare get_jobid integer;                                                                                                                                                                                                                                                 
 declare disable_job_id integer;                                                                                                                                                                                                                                            
 declare get_customer_id integer;                                                                                                                                                                                                                                           
 declare get_jobdetail_id integer;                                                                                                                                                                                                                                          
 declare get_awaiting_part_id integer;                                                                                                                                                                                                                                      
 declare get_used_part_id integer;                                                                                                                                                                                                                                          
 declare get_replacement_sku_id integer;                                                                                                                                                                                                                                    
 declare get_claim_id text;                                                                                                                                                                                                                                                 
 declare get_job_detail_id integer;                                                                                                                                                                                                                                         
 declare get_product_code_in_id integer;                                                                                                                                                                                                                                    
 declare get_product_code_out_id integer;                                                                                                                                                                                                                                   
 declare get_sku_in_id integer;                                                                                                                                                                                                                                             
 declare get_sku_out_id integer;                                                                                                                                                                                                                                            
 declare get_project text;                                                                                                                                                                                                                                                  
 declare isActivePartConsumed boolean default false;                                                                                                                                                                                                                        
 Begin                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                            
         -- Create temp table to hold json data                                                                                                                                                                                                                             
         drop table if exists tmp_jobinserteddata;                                                                                                                                                                                                                          
         create temp table tmp_jobinserteddata("id" serial,"job_number" text,"damagedImei" text, "claimId" text, "claimLineId" text, "project_name" text, "repair_status" integer, "repair_status_2" integer, "error_List" json, "insertedInto_Db" boolean);                
                                                                                                                                                                                                                                                                            
         drop table if exists tmp_errorlistjson;                                                                                                                                                                                                                            
         create temp table tmp_errorlistjson("id" serial,"errorCode" text, "errorMessage" text, "errorColumn" text, "errorType" text);                                                                                                                                      
                                                                                                                                                                                                                                                                            
         -- disable old records for problemFoundCode, problemFoundCodeSecondary, materialAwaiting & materialUsed                                                                                                                                                            
         FOR disable_job IN                                                                                                                                                                                                                                                 
         select * from json_to_recordset(arrayJobs::json) as(                                                                                                                                                                                                               
                 "jobNumber" text,"problemFoundCode" json, "problemFoundCodeSecondary" json, "actionCode" json,"repairStatus" json, "materialAwaiting" json, "materialUsed" json, "deductible" json                                                                         
         )                                                                                                                                                                                                                                                                  
         LOOP                                                                                                                                                                                                                                                               
                 -- get job id to disable old records                                                                                                                                                                                                                       
                 disable_job_id := (select id from job_head_new where b2x_job_number = disable_job."jobNumber");                                                                                                                                                            
                                                                                                                                                                                                                                                                            
                 -- Check job problems - insert new problems & disable old problems                                                                                                                                                                                         
                 if ((select count(1) from json_array_elements_text(disable_job."problemFoundCode")) > 0) THEN                                                                                                                                                              
                         UPDATE job_problem_found SET is_active = FALSE WHERE job_id = disable_job_id AND flag = 1;                                                                                                                                                         
                 End If;                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                 -- Check job problems - insert new problems & disable old problems                                                                                                                                                                                         
                 if ((select count(1) from json_array_elements_text(disable_job."problemFoundCodeSecondary")) > 0) THEN                                                                                                                                                     
                         UPDATE job_problem_found SET is_active = FALSE WHERE job_id = disable_job_id AND flag = 2;                                                                                                                                                         
                 End If;                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                 -- Check job actionCode - insert new action code & disable old action code                                                                                                                                                                                 
                 if ((select count(1) from json_array_elements_text(disable_job."actionCode")) > 0) THEN                                                                                                                                                                    
                         UPDATE job_action_code SET is_active = FALSE WHERE job_id = disable_job_id;                                                                                                                                                                        
                 End If;                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                 -- Check job materialAwaiting - insert new material Awaiting & disable old material Awaiting                                                                                                                                                               
                 if ((select count(1) from json_array_elements_text(disable_job."materialAwaiting")) > 0) THEN                                                                                                                                                              
                         UPDATE job_part_awainting SET is_active = FALSE WHERE job_id = disable_job_id;                                                                                                                                                                     
                 End If;                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                 -- Check job part_consumed - insert new part_consumed & disable old part_consumed                                                                                                                                                                          
                 IF ((SELECT COUNT(1) FROM json_array_elements_text(disable_job."materialUsed")) > 0) THEN                                                                                                                                                                  
                         FOR get_materialUsed IN SELECT "materialNumber" FROM json_to_recordset(disable_job."materialUsed"::json) AS("materialNumber" TEXT)                                                                                                                 
                         LOOP                                                                                                                                                                                                                                               
                                 IF (get_materialUsed."materialNumber" IS NOT null and get_materialUsed."materialNumber"::text != '' and disable_job."repairStatus"::text = '60') then                                                                                      
                                         -- if repair status is 60 and action code is 10                                                                                                                                                                                    
                                         if((select count(1) from (select value from json_array_elements_text(disable_job."actionCode")) as cte where value in ('10', '51') )) > 0 then                                                                                     
                                  UPDATE job_part_conusmed_new SET is_active = FALSE WHERE job_id = disable_job_id AND is_active = TRUE;                                                                                                                                    
                                         End If;                                                                                                                                                                                                                            
                                 END IF;                                                                                                                                                                                                                                    
                         END LOOP;                                                                                                                                                                                                                                          
                 End If;                                                                                                                                                                                                                                                    
         END LOOP;                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                            
         FOR update_job IN                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                            
                 select * from json_to_recordset(arrayJobs::json) as(                                                                                                                                                                                                       
                 "jobNumber" text,"claimingStatus" text,"repairStatus" text,"repairStatus2" integer,                                                                                                                                                                        
                 "logisticInBoundCourierName" text,"logisticOutBoundCourierName" text, "customerVisitDate" timestamp with time zone,                                                                                                                                        
                 "completionDate" timestamp with time zone,"oem" text,"damagedModel" text,"damagedSku" text,"damagedImei" text,                                                                                                                                             
                 "damagedImei2" text,"damagedSerialNumber" text,"replacementOem" text,"replacementModel" text,"replacementSku" text,                                                                                                                                        
                 "replacementImei" text,"replacementImei2" text,"replacementSerialNumber" text, "warranty" boolean,"customerName" text,                                                                                                                                     
                 "customerEmail" text,"customerId" text, "customerHomePhone" text,"customerMobile" text,"customerAddressLine1" text,                                                                                                                                        
                 "customerAddressLine2" text, "customerCity" text,"customerZip" text,"customerState" text,"customerCountry" text,                                                                                                                                           
                 "deviceBer" boolean,"accidentValid" boolean,"docImeiOk" boolean,"docInvoiceNumberOk" boolean,"docInvoicePrice" boolean,"docInvoiceDateOk" boolean,                                                                                                         
                 "docSigned" boolean,"deductibleReceipt" boolean,"deviceIrrepairable" boolean,"repairStatusUpdate" timestamp with time zone,                                                                                                                                
                 "repairStatus2Update" timestamp with time zone,"repairDescription" text,"accidentDescription" text,"problemFoundCode" json,                                                                                                                                
                 "problemFoundCodeSecondary" json,"materialAwaiting" json,"materialUsed" json, "damagedBoardSerialNumber" text,"replacementBoardSerialNumber" text,                                                                                                         
                 "rspDateIn" timestamp with time zone,"rspDateOut" timestamp with time zone,"documentType" text,"escalatedRepairType" text,                                                                                                                                 
                 "escalatedRsp" text,"logisticInBoundShipmentType" integer,"itemCodeOut" text,"logisticOutBoundShipmentType" integer,"pickupArrangedDate" timestamp with time zone,                                                                                         
                 "pickupDate" timestamp with time zone,"productVersionIn" text,"productVersionOut" text,"project" text,"qaTimeStamp" timestamp with time zone,                                                                                                              
                 "quotationStartDate" timestamp with time zone,"quotationEndDate" timestamp with time zone,"quotationStatusCode" integer,                                                                                                                                   
                 "rmaNumber" text,"shippedFrom" text,"shippedTo" text,"shopId" text,"shopInDate" timestamp with time zone,"shopOutDate" timestamp with time zone,                                                                                                           
                 "softwareIn" text,"softwareOut" text,"solutionAwaitedCode" integer,"specialProjectNumber" text,"supportPartnerTicketId" text,                                                                                                                              
                 "warrantyNumber" text,"errorList" json,"custom_1" text, "custom_2" text, "custom_3" text, "custom_4" text, "custom_5" text, "custom_6" text,                                                                                                               
                 "custom_7" text, "custom_8" text, "custom_9" text, "custom_10" text,                                                                                                                                                                                       
                 "repairTimestamp" timestamp with time zone, "reportDate" timestamp with time zone, "returnDate" timestamp with time zone,                                                                                                                                  
                 "transactionCode" integer, "deductible" json, "accidentId" text,"additionalService" text,"certificateNumber" text,                                                                                                                                         
                 "claimCreationDate" timestamp with time zone,"collectDeductible" boolean,"collectDevicePackaging" boolean,"commentary" text,                                                                                                                               
                 "customerPassportCountry" text,"customerPassportNumber" text,"damagedType" text,"deviceDateOfPurchase" timestamp with time zone,                                                                                                                           
                 "deviceConfiguration" text,"deviceValue" numeric(18,2),"deviceValueCurrency" text,"employeeNumber" text,"insuranceBroker" text,                                                                                                                            
                 "insuranceCoverage" text,"insuranceEndDate" timestamp with time zone,"insuranceStartDate" timestamp with time zone,"deviceInvoiceNumber" text,                                                                                                             
                 "loanPhone" boolean,"manufactureDate" timestamp with time zone,"maxRepairCost" numeric(18,2),"maxRepairCostCurrency" text,                                                                                                                                 
                 "providerOrCarrier" text,"replacementType" text,"salePrice" numeric(18,2),"salePriceCurrency" text,"specialInstructions" text,                                                                                                                             
                 "taxId" text,"transportInsr" boolean,"transportInsrCurrency" text,"transportInsrValue" numeric(18,2), "partnerJobNumber" text,                                                                                                                             
                 "claimType" text, "logisticInBoundAwb" text, "logisticOutBoundAwb" text, "quotationCurrency" text, "quotationAmount" numeric(18,2),                                                                                                                        
                 "cid" boolean, "actionCode" json, "insuranceProductName" text,"insurancePolicyNumber" text,                                                                                                                                                                
                 "billingCustomerAddressLine1" text,"billingCustomerAddressLine2" text,"billingCustomerCity" text,"billingCustomerState" text,                                                                                                                              
                 "billingCustomerZip" text,"billingCustomerCountry" text,"claimLineId" text)                                                                                                                                                                                
         LOOP                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                                                                            
                 IF (update_job."jobNumber" IS NOT NULL AND BTRIM(update_job."jobNumber") IS NOT NULL AND update_job."jobNumber" != '') THEN                                                                                                                                
                         TRUNCATE TABLE tmp_errorlistjson;                                                                                                                                                                                                                  
                         INSERT INTO tmp_errorlistjson("errorCode", "errorMessage", "errorColumn", "errorType")                                                                                                                                                             
                         SELECT * FROM json_to_recordset(update_job."errorList"::json) as ("errorCode" text, "errorMessage" text, "errorColumn" text, "errorType" text);                                                                                                    
                                                                                                                                                                                                                                                                            
                         --raise notice '> %', update_job."jobNumber";                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                            
                         get_jobid:= (SELECT id FROM job_head_new WHERE b2x_job_number = update_job."jobNumber");                                                                                                                                                           
                         get_job_detail_id:= (SELECT job_detail_id FROM job_head_new WHERE b2x_job_number = update_job."jobNumber");                                                                                                                                        
                         get_project:= (SELECT h.project FROM job_head_new h WHERE h.b2x_job_number = update_job."jobNumber");                                                                                                                                              
                                                                                                                                                                                                                                                                            
                         INSERT INTO tr_job_error(job_id,code,name,is_active,created_on ,created_by)                                                                                                                                                                        
                         SELECT get_jobid,"errorCode", "errorMessage",true,now(),1 FROM tmp_errorlistjson;                                                                                                                                                                  
                                                                                                                                                                                                                                                                            
                         if (get_jobid is not null) then                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                                 --==============insert data into the Job details table                                                                                                                                                                                     
                                 insert into job_detail_new (                                                                                                                                                                                                               
                                         job_id,repair_status,second_repair_status,logistic_inbound_courier_name,logistic_outbound_courier_name,                                                                                                                            
                                         repair_status_update,repair_status_2_update,repair_description,is_active,                                                                                                                                                          
                                         created_on, "custom_1", "custom_2", "custom_3", "custom_4", "custom_5", "custom_6",                                                                                                                                                
                                         "custom_7", "custom_8", "custom_9", "custom_10",file_name, b2x_req_id,                                                                                                                                                             
                                         additional_Service, collect_deductible, collect_device_packaging, commentary, device_Configuration,                                                                                                                                
                                         device_value, device_value_currency, employee_Number, loan_phone, max_repair_cost, max_repair_cost_currency,                                                                                                                       
                                         sale_price, sale_price_currency, special_instructions, tax_id, transport_insr, transport_insr_currency,                                                                                                                            
                                         transport_insr_value, quotation_currency, quotation_amount, cid, channel, user_name, user_id)                                                                                                                                      
                                 (                                                                                                                                                                                                                                          
                                 select                                                                                                                                                                                                                                     
                                         get_jobid, update_job."repairStatus", update_job."repairStatus2",                                                                                                                                                                  
                                         coalesce(update_job."logisticInBoundCourierName", de.logistic_inbound_courier_name),                                                                                                                                               
                                         coalesce(update_job."logisticOutBoundCourierName", de.logistic_outbound_courier_name),                                                                                                                                             
                                         coalesce(update_job."repairStatusUpdate", de.repair_status_update),                                                                                                                                                                
                                         update_job."repairStatus2Update",                                                                                                                                                                                                  
                                         coalesce(update_job."repairDescription", de.repair_description),                                                                                                                                                                   
                                         true,now(),                                                                                                                                                                                                                        
                                         coalesce(update_job."custom_1", de."custom_1"),coalesce(update_job."custom_2", de."custom_2"),                                                                                                                                     
                                         coalesce(update_job."custom_3", de."custom_3"), coalesce(update_job."custom_4", de."custom_4"),                                                                                                                                    
                                         coalesce(update_job."custom_5", de."custom_5"), coalesce(update_job."custom_6", de."custom_6"),                                                                                                                                    
                                         coalesce(update_job."custom_7", de."custom_7"), coalesce(update_job."custom_8", de."custom_8"),                                                                                                                                    
                                         coalesce(update_job."custom_9", de."custom_9"), coalesce(update_job."custom_10", de."custom_10"),                                                                                                                                  
                                         filename, b2xreqid,                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                            
                                         coalesce(update_job."additionalService", de.additional_service),                                                                                                                                                                   
                                         coalesce(update_job."collectDeductible", de.collect_deductible),                                                                                                                                                                   
                                         coalesce(update_job."collectDevicePackaging", de.collect_device_packaging),                                                                                                                                                        
                                         coalesce(update_job."commentary", de.commentary),                                                                                                                                                                                  
                                         coalesce(update_job."deviceConfiguration", de.device_Configuration),                                                                                                                                                               
                                         coalesce(update_job."deviceValue", de.device_value),                                                                                                                                                                               
                                         coalesce(update_job."deviceValueCurrency", de.device_value_currency),                                                                                                                                                              
                                         coalesce(update_job."employeeNumber", de.employee_Number),                                                                                                                                                                         
                                         coalesce(update_job."loanPhone", de.loan_phone),                                                                                                                                                                                   
                                         coalesce(update_job."maxRepairCost", de.max_repair_cost),                                                                                                                                                                          
                                         coalesce(update_job."maxRepairCostCurrency", de.max_repair_cost_currency),                                                                                                                                                         
                                         coalesce(update_job."salePrice", de.sale_price),                                                                                                                                                                                   
                                         coalesce(update_job."salePriceCurrency", de.sale_price_currency),                                                                                                                                                                  
                                         coalesce(update_job."specialInstructions", de.special_instructions),                                                                                                                                                               
                                         coalesce(update_job."taxId", de.tax_id),                                                                                                                                                                                           
                                         coalesce(update_job."transportInsr", de.transport_insr),                                                                                                                                                                           
                                         coalesce(update_job."transportInsrCurrency", de.transport_insr_currency),                                                                                                                                                          
                                         coalesce(update_job."transportInsrValue", de.transport_insr_value),                                                                                                                                                                
                                         coalesce(update_job."quotationCurrency", de.quotation_currency),                                                                                                                                                                   
                                         coalesce(update_job."quotationAmount", de.quotation_amount),                                                                                                                                                                       
                                         coalesce(update_job."cid", de.cid),                                                                                                                                                                                                
                                         "Channel", username, userid                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                            
                                         from job_detail_new de                                                                                                                                                                                                             
                                         where id = get_job_detail_id                                                                                                                                                                                                       
                                 )                                                                                                                                                                                                                                          
                                 --==============get JobdetailsId from the Job details table========                                                                                                                                                                        
                                 returning id into get_jobdetail_id;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                            
                                 get_customer_id:= (SELECT consumer_id FROM job_head_new WHERE id = get_jobid);                                                                                                                                                             
                                 if (get_customer_id is not null) then                                                                                                                                                                                                      
                                         --==============update the consumer data========                                                                                                                                                                                   
                                         update public.tr_consumer set                                                                                                                                                                                                      
                                                 name = coalesce(update_job."customerName", name),                                                                                                                                                                          
                                                 address_line1 = coalesce(update_job."customerAddressLine1", address_line1),                                                                                                                                                
                                                 address_line2 = coalesce(update_job."customerAddressLine2", address_line2),                                                                                                                                                
                                                 zip = coalesce(update_job."customerZip", zip),                                                                                                                                                                             
                                                 city = coalesce(update_job."customerCity", city),                                                                                                                                                                          
                                                 state = coalesce(update_job."customerState", state),                                                                                                                                                                       
                                                 country = coalesce(update_job."customerCountry", country),                                                                                                                                                                 
                                                 email = coalesce(update_job."customerEmail", email),                                                                                                                                                                       
                                                 customer_id = coalesce(update_job."customerId", customer_id),                                                                                                                                                              
                                                 home_phone = coalesce(update_job."customerHomePhone", home_phone),                                                                                                                                                         
                                                 mobile = coalesce(update_job."customerMobile", mobile),                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                                                 passport_country = coalesce(update_job."customerPassportCountry", passport_country),                                                                                                                                       
                                                 passport_number = coalesce(update_job."customerPassportNumber", passport_number),                                                                                                                                          
                                                                                                                                                                                                                                                                            
                                                 billing_address_line1 = coalesce(update_job."billingCustomerAddressLine1", billing_address_line1),                                                                                                                         
                                                 billing_address_line2 = coalesce(update_job."billingCustomerAddressLine2", billing_address_line2),                                                                                                                         
                                                 billing_zip = coalesce(update_job."billingCustomerZip", billing_zip),                                                                                                                                                      
                                                 billing_city = coalesce(update_job."billingCustomerCity", billing_city),                                                                                                                                                   
                                                 billing_state = coalesce(update_job."billingCustomerState", billing_state),                                                                                                                                                
                                                 billing_country = coalesce(update_job."billingCustomerCountry", billing_country),                                                                                                                                          
                                                 --job_detail_id = get_jobdetail_id,                                                                                                                                                                                        
                                                 updated_on = now()                                                                                                                                                                                                         
                                                 where id = get_customer_id;                                                                                                                                                                                                
                                 else                                                                                                                                                                                                                                       
                                         --==============insert the consumer data========                                                                                                                                                                                   
                                         INSERT INTO public.tr_consumer (                                                                                                                                                                                                   
                                                 name,address_line1,address_line2,zip,city,state,country,email,cusromer_id, home_phone,mobile,                                                                                                                              
                                                 is_active,created_on, passport_country, passport_number,                                                                                                                                                                   
                                                 billing_address_line1,billing_address_line2,billing_city,billing_state,billing_zip,billing_country,job_detail_id)                                                                                                          
                                         values(                                                                                                                                                                                                                            
                                                 update_job."customerName", update_job."customerAddressLine1", update_job."customerAddressLine2", update_job."customerZip",                                                                                                 
                                                 update_job."customerCity", update_job."customerState", update_job."customerCountry", update_job."customerEmail",                                                                                                           
                                                 update_job."customerId", update_job."customerHomePhone", update_job."customerMobile",true,now(),                                                                                                                           
                                                 update_job."customerPassportCountry", update_job."customerPassportNumber",                                                                                                                                                 
                                                 update_job."billingCustomerAddressLine1",update_job."billingCustomerAddressLine2",update_job."billingCustomerCity",update_job."billingCustomerState",                                                                      
                                                 update_job."billingCustomerZip",update_job."billingCustomerCountry", get_jobdetail_id                                                                                                                                      
                                         )                                                                                                                                                                                                                                  
                                         --==============get consumer Id from the consumer data========                                                                                                                                                                     
                                         returning id into get_customer_id;                                                                                                                                                                                                 
                                         --==============update  consumer Id in job_head table========                                                                                                                                                                      
                                         update job_head_new                                                                                                                                                                                                                
                                         set consumer_id = get_customer_id                                                                                                                                                                                                  
                                         WHERE id = get_jobid;                                                                                                                                                                                                              
                                 end if;                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                                 --==============get Model id from model table=======                                                                                                                                                                                       
                                 if (update_job."replacementModel" is not null and update_job."replacementModel" !='') THEN                                                                                                                                                 
                                         get_product_code_out_id := (select id from mst_model                                                                                                                                                                               
                                                                 where model_code = update_job."replacementModel"                                                                                                                                                           
                                                                 and is_active = true                                                                                                                                                                                       
                                                                 limit 1);                                                                                                                                                                                                  
                                 End if;                                                                                                                                                                                                                                    
                                 --==============get sku id from sku table=======                                                                                                                                                                                           
                                 if (update_job."damagedSku" is not null and update_job."damagedSku" !='') THEN                                                                                                                                                             
                                         get_sku_in_id := (select id from mst_sku                                                                                                                                                                                           
                                                                 where sku_code = update_job."damagedSku"                                                                                                                                                                   
                                                                 and is_active = true                                                                                                                                                                                       
                                                                 limit 1);                                                                                                                                                                                                  
                                 end if;                                                                                                                                                                                                                                    
                                 --==============get sku id from model table=======                                                                                                                                                                                         
                                 if (update_job."replacementSku" is not null and update_job."replacementSku" !='') THEN                                                                                                                                                     
                                         get_sku_out_id := (select id from mst_sku                                                                                                                                                                                          
                                                                 where sku_code = update_job."replacementSku"                                                                                                                                                               
                                                                 and is_active = true                                                                                                                                                                                       
                                                                 limit 1);                                                                                                                                                                                                  
                                 End if;                                                                                                                                                                                                                                    
                                 --==============get Model id from model table=======                                                                                                                                                                                       
                                 if (update_job."damagedModel" is not null and update_job."damagedModel" !='') THEN                                                                                                                                                         
                                         get_product_code_in_id := (select id from mst_model where model_code = update_job."damagedModel" and is_active = true limit 1);                                                                                                    
                                 End if;                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
                                 --==============update data into the Job head table========                                                                                                                                                                                
                                 update job_head_new h set                                                                                                                                                                                                                  
                                         accident_description = coalesce(update_job."accidentDescription", accident_description),                                                                                                                                           
                                         job_detail_id = get_jobdetail_id,                                                                                                                                                                                                  
                                         claiming_status = coalesce(update_job."claimingStatus",claiming_status),                                                                                                                                                           
                                         repair_status = coalesce(update_job."repairStatus",repair_status),                                                                                                                                                                 
                                         second_repair_status = update_job."repairStatus2",                                                                                                                                                                                 
                                         customer_visit_date = coalesce(update_job."customerVisitDate",customer_visit_date),                                                                                                                                                
                                         completion_date = coalesce(update_job."completionDate",completion_date),                                                                                                                                                           
                                         oem_in = coalesce(update_job."oem",oem_in),                                                                                                                                                                                        
                                         product_code_in_id = coalesce(get_product_code_in_id,product_code_in_id),                                                                                                                                                          
                                         product_code_in = coalesce(update_job."damagedModel",product_code_in),                                                                                                                                                             
                                                                                                                                                                                                                                                                            
                                         sku_in_id = coalesce(get_sku_in_id, sku_in_id),                                                                                                                                                                                    
                                         sku_in = coalesce(update_job."damagedSku", sku_in),                                                                                                                                                                                
                                         sku_out_id = coalesce(get_sku_out_id, sku_out_id),                                                                                                                                                                                 
                                         sku_out = coalesce(update_job."replacementSku",sku_out),                                                                                                                                                                           
                                                                                                                                                                                                                                                                            
                                         imei_number_in = coalesce(update_job."damagedImei",imei_number_in),                                                                                                                                                                
                                         imei_2_in = coalesce(update_job."damagedImei2",imei_2_in),                                                                                                                                                                         
                                         serial_number_in = coalesce(update_job."damagedSerialNumber",serial_number_in),                                                                                                                                                    
                                         oem_out = coalesce(update_job."replacementOem",oem_out),                                                                                                                                                                           
                                         product_code_out_id = coalesce(get_product_code_out_id, product_code_out_id),                                                                                                                                                      
                                         product_code_out = coalesce(update_job."replacementModel",product_code_out),                                                                                                                                                       
                                         --replacement_sku_id = coalesce(get_replacement_sku_id,replacement_sku_id),                                                                                                                                                        
                                         imei_number_out = coalesce(update_job."replacementImei",imei_number_out),                                                                                                                                                          
                                         imei_2_out = coalesce(update_job."replacementImei2",imei_2_out),                                                                                                                                                                   
                                         serial_number_out = coalesce(update_job."replacementSerialNumber",serial_number_out),                                                                                                                                              
                                         warranty = coalesce(update_job."warranty",warranty),                                                                                                                                                                               
                                         device_ber = coalesce(update_job."deviceBer",device_ber),                                                                                                                                                                          
                                         accident_valid = coalesce(update_job."accidentValid",accident_valid),                                                                                                                                                              
                                         doc_imei_ok = coalesce(update_job."docImeiOk",doc_imei_ok),                                                                                                                                                                        
                                         doc_invoice_number_ok = coalesce(update_job."docInvoiceNumberOk",doc_invoice_number_ok),                                                                                                                                           
                                         doc_invoice_price = coalesce(update_job."docInvoicePrice",doc_invoice_price),                                                                                                                                                      
                                         doc_signed = coalesce(update_job."docSigned",doc_signed),                                                                                                                                                                          
                                         doc_invoice_date_ok = coalesce(update_job."docInvoiceDateOk",doc_invoice_date_ok),                                                                                                                                                 
                                         deductible_receipt = coalesce(update_job."deductibleReceipt",deductible_receipt),                                                                                                                                                  
                                         device_irrepairable = coalesce(update_job."deviceIrrepairable",device_irrepairable),                                                                                                                                               
                                         rsp_date_in = coalesce(update_job."rspDateIn",rsp_date_in),                                                                                                                                                                        
                                         rsp_date_out = coalesce(update_job."rspDateOut",rsp_date_out),                                                                                                                                                                     
                                         damaged_board_serial_number = coalesce(update_job."damagedBoardSerialNumber", damaged_board_serial_number),                                                                                                                        
                                         replacement_board_serial_number = coalesce(update_job."replacementBoardSerialNumber", replacement_board_serial_number),                                                                                                            
                                         document_type = coalesce(update_job."documentType",document_type),                                                                                                                                                                 
                                         escalated_repair_type = coalesce(update_job."escalatedRepairType",escalated_repair_type),                                                                                                                                          
                                         escalated_rsp = coalesce(update_job."escalatedRsp",escalated_rsp),                                                                                                                                                                 
                                         logistic_inbound_shipment_type = coalesce(update_job."logisticInBoundShipmentType",logistic_inbound_shipment_type),                                                                                                                
                                         logistic_outbound_shipment_type = coalesce(update_job."logisticOutBoundShipmentType",logistic_outbound_shipment_type),                                                                                                             
                                         item_code_out = coalesce(update_job."itemCodeOut",item_code_out),                                                                                                                                                                  
                                         pickup_arranged_date = coalesce(update_job."pickupArrangedDate",pickup_arranged_date),                                                                                                                                             
                                         pickup_date = coalesce(update_job."pickupDate",pickup_date),                                                                                                                                                                       
                                         product_version_in = coalesce(update_job."productVersionIn",product_version_in),                                                                                                                                                   
                                         product_version_out = coalesce(update_job."productVersionOut",product_version_out),                                                                                                                                                
                                         project = coalesce(update_job."project",get_project),                                                                                                                                                                              
                                         qa_timepstamp = coalesce(update_job."qaTimeStamp",qa_timepstamp),                                                                                                                                                                  
                                         quotation_start_date = coalesce(update_job."quotationStartDate",quotation_start_date),                                                                                                                                             
                                         quotation_end_date = coalesce(update_job."quotationEndDate",quotation_end_date),                                                                                                                                                   
                                         quotation_status_code = coalesce(update_job."quotationStatusCode",quotation_status_code),                                                                                                                                          
                                         rma_number = coalesce(update_job."rmaNumber",rma_number),                                                                                                                                                                          
                                         shipped_from = coalesce(update_job."shippedFrom",shipped_from),                                                                                                                                                                    
                                         shipped_to = coalesce(update_job."shippedTo",shipped_to),                                                                                                                                                                          
                                         shop_id = coalesce(update_job."shopId",shop_id),                                                                                                                                                                                   
                                         shop_in_date = coalesce(update_job."shopInDate",shop_in_date),                                                                                                                                                                     
                                         shop_out_date = coalesce(update_job."shopOutDate",shop_out_date),                                                                                                                                                                  
                                         software_in = coalesce(update_job."softwareIn",software_in),                                                                                                                                                                       
                                         software_out = coalesce(update_job."softwareOut",software_out),                                                                                                                                                                    
                                         solution_awaited_code = coalesce(update_job."solutionAwaitedCode",solution_awaited_code),                                                                                                                                          
                                         special_project_number = coalesce(update_job."specialProjectNumber",special_project_number),                                                                                                                                       
                                         support_partner_ticket_id = coalesce(update_job."supportPartnerTicketId",support_partner_ticket_id),                                                                                                                               
                                         warranty_number = coalesce(update_job."warrantyNumber",warranty_number),                                                                                                                                                           
                                         updated_on = now(),                                                                                                                                                                                                                
                                                                                                                                                                                                                                                                            
                                         repair_timestamp = coalesce(update_job."repairTimestamp", repair_timestamp),                                                                                                                                                       
                                         report_date = coalesce(update_job."reportDate", report_date),                                                                                                                                                                      
                                         return_date = coalesce(update_job."returnDate", return_date),                                                                                                                                                                      
                                         transaction_code = coalesce(update_job."transactionCode", transaction_code),                                                                                                                                                       
                                                                                                                                                                                                                                                                            
                                         accident_id = coalesce(update_job."accidentId", accident_id),                                                                                                                                                                      
                                         certificate_number = coalesce(update_job."certificateNumber", certificate_number),                                                                                                                                                 
                                         claim_creation_date = coalesce(update_job."claimCreationDate", claim_creation_date),                                                                                                                                               
                                         type_in = coalesce(update_job."damagedType", type_in),                                                                                                                                                                             
                                         device_date_of_purchase = coalesce(update_job."deviceDateOfPurchase", device_date_of_purchase),                                                                                                                                    
                                         insurance_Broker = coalesce(update_job."insuranceBroker", insurance_Broker),                                                                                                                                                       
                                         insurance_coverage = coalesce(update_job."insuranceCoverage", insurance_coverage),                                                                                                                                                 
                                         insurance_end_date = coalesce(update_job."insuranceEndDate", insurance_end_date),                                                                                                                                                  
                                         insurance_start_date = coalesce(update_job."insuranceStartDate", insurance_start_date),                                                                                                                                            
                                                                                                                                                                                                                                                                            
                                         insurance_product_name = coalesce(update_job."insuranceProductName", insurance_product_name),                                                                                                                                      
                                         insurance_policy_number = coalesce(update_job."insurancePolicyNumber", insurance_policy_number),                                                                                                                                   
                                                                                                                                                                                                                                                                            
                                         device_invoice_number = coalesce(update_job."deviceInvoiceNumber", device_invoice_number),                                                                                                                                         
                                         device_manufacture_date = coalesce(update_job."manufactureDate", device_manufacture_date),                                                                                                                                         
                                         provider_or_carrier = coalesce(update_job."providerOrCarrier", provider_or_carrier),                                                                                                                                               
                                         type_out = coalesce(update_job."replacementType", type_out),                                                                                                                                                                       
                                         partner_job_number = coalesce(update_job."partnerJobNumber", partner_job_number),                                                                                                                                                  
                                         claim_type = coalesce(update_job."claimType", claim_type),                                                                                                                                                                         
                                         logistic_inbound_awb = coalesce(update_job."logisticInBoundAwb", logistic_inbound_awb),                                                                                                                                            
                                         logistic_outbound_awb = coalesce(update_job."logisticOutBoundAwb", logistic_outbound_awb)                                                                                                                                          
                                                                                                                                                                                                                                                                            
                                 where id = get_jobid;                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                            
                                 ---------------------insert into problem Found table ---------------                                                                                                                                                                       
                                 FOR get_problemFoundCode IN                                                                                                                                                                                                                
                                         select value from json_array_elements_text(update_job."problemFoundCode")                                                                                                                                                          
                                 LOOP                                                                                                                                                                                                                                       
                                         insert into job_problem_found(job_id,primary_code,is_active,created_on,flag,job_detail_id)                                                                                                                                         
                                         values (get_jobid, get_problemFoundCode."value",true,now(),1, get_jobdetail_id);                                                                                                                                                   
                                 END LOOP;                                                                                                                                                                                                                                  
                                 ---------------------end of problem Found table ---------------                                                                                                                                                                            
                                                                                                                                                                                                                                                                            
                                 ---------------------insert into problem Found table ---------------                                                                                                                                                                       
                                 FOR get_problemFoundCode IN                                                                                                                                                                                                                
                                         select value from json_array_elements_text(update_job."problemFoundCodeSecondary")                                                                                                                                                 
                                 LOOP                                                                                                                                                                                                                                       
                                         insert into job_problem_found(job_id,primary_code,is_active,created_on,flag,job_detail_id)                                                                                                                                         
                                         values (get_jobid, get_problemFoundCode."value",true,now(),2,get_jobdetail_id);                                                                                                                                                    
                                 END LOOP;                                                                                                                                                                                                                                  
                                 ---------------------end of problem Found table ---------------                                                                                                                                                                            
                                                                                                                                                                                                                                                                            
                                 ---------------------insert into action code table ---------------                                                                                                                                                                         
                                 FOR get_actionCode IN                                                                                                                                                                                                                      
                                         select value from json_array_elements_text(update_job."actionCode")                                                                                                                                                                
                                 LOOP                                                                                                                                                                                                                                       
                                         insert into job_action_code(job_id, action_code, is_active, created_on, job_detail_id)                                                                                                                                             
                                         values (get_jobid, get_actionCode."value", true, now(), get_jobdetail_id);                                                                                                                                                         
                                 END LOOP;                                                                                                                                                                                                                                  
                                 ---------------------end of action code table ---------------                                                                                                                                                                              
                                                                                                                                                                                                                                                                            
                                 ---------------------insert into job part awaiting table ---------------                                                                                                                                                                   
                                 FOR get_materialAwaiting IN                                                                                                                                                                                                                
                                         select "materialNumber",cast(coalesce(nullif("quantityAwaiting",''),'0') as float) as "quantityAwaiting"                                                                                                                           
                                         from json_to_recordset(update_job."materialAwaiting"::json) as                                                                                                                                                                     
                                         (                                                                                                                                                                                                                                  
                                                 "materialNumber" text,"quantityAwaiting" text                                                                                                                                                                              
                                         )                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                            
                                 LOOP                                                                                                                                                                                                                                       
                                         get_awaiting_part_id := (select id from mst_part                                                                                                                                                                                   
                                                                 where lower(part_code) = lower(get_materialAwaiting."materialNumber")                                                                                                                                      
                                                                 and is_active = true limit 1);                                                                                                                                                                             
                                                                                                                                                                                                                                                                            
                                         if get_materialAwaiting."materialNumber" is not null and get_materialAwaiting."quantityAwaiting" > 0 then                                                                                                                          
                                                                                                                                                                                                                                                                            
                                                 insert into job_part_awainting(job_id,part_id,material_number,quantity_missing,is_active,created_on,job_detail_id)                                                                                                         
                                                 values (get_jobid,get_awaiting_part_id, get_materialAwaiting."materialNumber",get_materialAwaiting."quantityAwaiting",true,now(),get_jobdetail_id);                                                                        
                                                                                                                                                                                                                                                                            
                                         end if;                                                                                                                                                                                                                            
                                 END LOOP;                                                                                                                                                                                                                                  
                                 ---------------------end of job part awaiting table ---------------                                                                                                                                                                        
                                                                                                                                                                                                                                                                            
                                 ---------------------insert into job part consumed table ---------------                                                                                                                                                                   
                                 IF ((SELECT COUNT(1) FROM json_array_elements_text(update_job."materialUsed")) > 0) then                                                                                                                                                   
                                         FOR get_materialUsed IN                                                                                                                                                                                                            
                                                 select "actionReason","actionRemarks","deliveryDate","deliveryNumber",                                                                                                                                                     
                                                 "designatorNumber","faultCode","fieldBulletinId","materialNumber","materialSerialNumber",                                                                                                                                  
                                                 "payer","quantityExchanged","quantityReplaced","rootCause","technicanId","mandatory",                                                                                                                                      
                                                 "damagedMaterialNumber", "damagedMaterialSerialNumber"                                                                                                                                                                     
                                                 from json_to_recordset(update_job."materialUsed"::json) as                                                                                                                                                                 
                                                 ("actionReason" text,"actionRemarks" text,"deliveryDate" timestamp with time zone,                                                                                                                                         
                                                 "deliveryNumber" text,"designatorNumber" text,"faultCode" text,"fieldBulletinId" text,"materialNumber" text,                                                                                                               
                                                 "materialSerialNumber" text,"payer" integer,"quantityExchanged" integer,"quantityReplaced" integer,                                                                                                                        
                                                 "rootCause" boolean,"technicanId" text,"mandatory" boolean, "damagedMaterialNumber" text, "damagedMaterialSerialNumber" text)                                                                                              
                                                                                                                                                                                                                                                                            
                                         LOOP                                                                                                                                                                                                                               
                                             if (get_materialUsed."materialNumber" is not null and get_materialUsed."materialNumber"::text != '') then                                                                                                                      
                                                         get_used_part_id := (select id from mst_part where lower(part_code) = lower(get_materialUsed."materialNumber") and is_active = true limit 1);                                                                      
                                                                                                                                                                                                                                                                            
                                                         isActivePartConsumed := false;                                                                                                                                                                                     
                                                         -- if repair status is 60 and action code is 10                                                                                                                                                                    
                                                         if((select count(1) from (select value from json_array_elements_text(update_job."actionCode")) as cte where value in ('10', '51') )) > 0 then                                                                      
                                                                 IF (update_job."repairStatus"::text = '60') then isActivePartConsumed := true;                                                                                                                             
                                                                 End IF;                                                                                                                                                                                                    
                                                         End If;                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                            
                                                         INSERT INTO job_part_conusmed_new(job_id,action_reason_code,action_remarks,delivery_date,delivery_number,                                                                                                          
                                                         fault_code,field_bulletin_number,material_number_id,material_number,material_serial_number,payer,quantity_exchanged,                                                                                               
                                                         quantity_replaced,root_cause,technician_id,reference_designator_number,mandatory,is_active,created_on,                                                                                                             
                                                         damaged_material_number, damaged_material_serial_number, job_detail_id)                                                                                                                                            
                                                         values (get_jobid,get_materialUsed."actionReason",get_materialUsed."actionRemarks",                                                                                                                                
                                                         get_materialUsed."deliveryDate",get_materialUsed."deliveryNumber",get_materialUsed."faultCode",                                                                                                                    
                                                         get_materialUsed."fieldBulletinId",get_used_part_id,get_materialUsed."materialNumber",                                                                                                                             
                                                         get_materialUsed."materialSerialNumber", get_materialUsed."payer", get_materialUsed."quantityExchanged",                                                                                                           
                                                         get_materialUsed."quantityReplaced", get_materialUsed."rootCause", get_materialUsed."technicanId",                                                                                                                 
                                                         get_materialUsed."designatorNumber", get_materialUsed."mandatory", isActivePartConsumed, now(),                                                                                                                    
                                                         get_materialUsed."damagedMaterialNumber", get_materialUsed."damagedMaterialSerialNumber", get_jobdetail_id);                                                                                                       
                                                 end if;                                                                                                                                                                                                                    
                                         END LOOP;                                                                                                                                                                                                                          
                                 end if;                                                                                                                                                                                                                                    
                                 ---------------------end of job part consumed table ---------------                                                                                                                                                                        
                                                                                                                                                                                                                                                                            
                                 ---------------------insert into Job_deductible table -------------                                                                                                                                                                        
                                 -- +++++++++++++++++++++++++++ dwductible will get saved from job/deductible api only +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++                                                                            
                                 -- FOR get_deductible IN                                                                                                                                                                                                                   
 --                                      SELECT * FROM json_to_record(update_job."deductible"::json) AS                                                                                                                                                                     
 --                                      ("amount" NUMERIC(18,2), "currency" TEXT, "paymentMessage" TEXT, "paymentMode" TEXT,                                                                                                                                               
 --                                      "status" TEXT, "transactionId" TEXT)                                                                                                                                                                                               
 --                              LOOP                                                                                                                                                                                                                                       
 --                                      if((get_deductible."amount"::numeric(18,2)) > 0) then                                                                                                                                                                              
 --                                              INSERT INTO job_deductible(job_id, amount, currency, status, payment_mode, transaction_id, payment_message, is_active, created_on)                                                                                         
 --                                              VALUES(get_jobid, get_deductible."amount", get_deductible."currency", get_deductible."status", get_deductible."paymentMode", get_deductible."transactionId",                                                               
 --                                              get_deductible."paymentMessage", true, now());                                                                                                                                                                             
 --                                      end if;                                                                                                                                                                                                                            
 --                              END LOOP;                                                                                                                                                                                                                                  
                                 ---------------------end of job_customer_complaint table ---------------                                                                                                                                                                   
                                                                                                                                                                                                                                                                            
                                 get_claim_id = (SELECT claim_id FROM job_head_new WHERE id = get_jobid AND is_active = true ORDER BY 1 LIMIT 1);                                                                                                                           
                                                                                                                                                                                                                                                                            
                                 INSERT INTO tmp_jobinserteddata ("job_number","damagedImei","claimId", "claimLineId", "project_name", "repair_status", "repair_status_2", "error_List","insertedInto_Db")                                                                  
                                 VALUES (update_job."jobNumber",update_job."damagedImei",get_claim_id, update_job."claimLineId", update_job."project", update_job."repairStatus"::integer, coalesce(update_job."repairStatus2"::integer, null), update_job."errorList",true);   
                         ELSE                                                                                                                                                                                                                                               
                                 get_claim_id = (SELECT claim_id FROM job_head_new WHERE id = get_jobid AND is_active = true ORDER BY 1 LIMIT 1);                                                                                                                           
                                                                                                                                                                                                                                                                            
                                 INSERT INTO tmp_jobinserteddata ("job_number","damagedImei","claimId","claimLineId", "project_name", "repair_status", "repair_status_2", "error_List","insertedInto_Db")                                                                   
                                 VALUES (update_job."jobNumber",update_job."damagedImei",get_claim_id, update_job."claimLineId", update_job."project", update_job."repairStatus"::integer, coalesce(update_job."repairStatus2"::integer, null), update_job."errorList", false); 
                         END IF;                                                                                                                                                                                                                                            
                 ELSE                                                                                                                                                                                                                                                       
                         get_claim_id = (SELECT claim_id FROM job_head_new WHERE id = get_jobid AND is_active = true ORDER BY 1 LIMIT 1);                                                                                                                                   
                                                                                                                                                                                                                                                                            
                         INSERT INTO tmp_jobinserteddata ("job_number","damagedImei","claimId", "claimLineId", "project_name", "repair_status", "repair_status_2", "error_List","insertedInto_Db")                                                                          
                         VALUES (update_job."jobNumber",update_job."damagedImei",get_claim_id, update_job."claimLineId", update_job."project", update_job."repairStatus"::integer, coalesce(update_job."repairStatus2"::integer, null), update_job."errorList", false);     
                 END IF;                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                            
         END LOOP;                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                            
         RETURN QUERY (SELECT t."claimId", t."claimLineId", t."damagedImei", t."error_List", t."insertedInto_Db", t."job_number", t."project_name", t."repair_status", t."repair_status_2" from tmp_jobinserteddata t);                                                     
 End
$function$
