CREATE OR REPLACE FUNCTION public.rule_for_update_job_new(arrayjobs text)
 RETURNS text
 LANGUAGE plpgsql
AS $function$
 DECLARE op_outputjson text := '';                                                                                                                                                                                                                      
 declare count_damagedIMEI integer;                                                                                                                                                                                                                     
 declare recordCheck record;                                                                                                                                                                                                                            
 declare job record;                                                                                                                                                                                                                                    
 Declare dbflag boolean;                                                                                                                                                                                                                                
 declare errorList json:= '[]';                                                                                                                                                                                                                         
 declare adderror record;                                                                                                                                                                                                                               
 declare error record;                                                                                                                                                                                                                                  
 declare materialUsed record;                                                                                                                                                                                                                           
 declare chkMaterialUsed record;                                                                                                                                                                                                                        
 declare chkMaterialUsed2 record;                                                                                                                                                                                                                       
 declare chkActionCode record;                                                                                                                                                                                                                          
 DECLARE count_flag integer;                                                                                                                                                                                                                            
 declare jobclose_flag integer;                                                                                                                                                                                                                         
 declare checkjob_flag integer;                                                                                                                                                                                                                         
 --declare get_claim_id text;                                                                                                                                                                                                                           
 declare check_rsp_id integer;                                                                                                                                                                                                                          
 declare old_damaged_imei text;                                                                                                                                                                                                                         
 -- DECLARE check_transaction_code integer;                                                                                                                                                                                                             
 -- DECLARE check_claim_type integer;                                                                                                                                                                                                                   
 -- DECLARE check_repair_status integer;                                                                                                                                                                                                                
 Begin                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                        
         -- Create temp table to hold json data                                                                                                                                                                                                         
         drop table if exists tmp_updatejobjsondata;                                                                                                                                                                                                    
         create temp table tmp_updatejobjsondata("id" serial,"jobNumber" text,"claimingStatus" text,"repairStatus" text,"repairStatus2" integer,                                                                                                        
                         "logisticInBoundCourierName" text,"logisticOutBoundCourierName" text,"customerVisitDate" timestamp with time zone,                                                                                                             
                         "completionDate" timestamp with time zone,"oem" text,"damagedModel" text,"damagedSku" text,"damagedImei" text,                                                                                                                 
                         "damagedImei2" text,"damagedSerialNumber" text,"replacementOem" text,"replacementModel" text,"replacementSku" text,                                                                                                            
                         "replacementImei" text,"replacementImei2" text,"replacementSerialNumber" text, "warranty" boolean,"customerName" text,                                                                                                         
                         "customerEmail" text, "customerId" text, "customerHomePhone" text,"customerMobile" text,"customerAddressLine1" text,                                                                                                           
                         "customerAddressLine2" text, "customerCity" text,"customerZip" text,"customerState" text,"customerCountry" text,                                                                                                               
                         "deviceBer" boolean,"accidentValid" boolean,"docImeiOk" boolean,"docInvoiceNumberOk" boolean,"docInvoicePrice" boolean,"docInvoiceDateOk" boolean,                                                                             
                         "docSigned" boolean,"deductibleReceipt" boolean,"deviceIrrepairable" boolean,"repairStatusUpdate" timestamp with time zone,                                                                                                    
                         "repairStatus2Update" timestamp with time zone,"repairDescription" text,"accidentDescription" text,"problemFoundCode" json,                                                                                                    
                         "problemFoundCodeSecondary" json,"materialAwaiting" json,"materialUsed" json,"damagedBoardSerialNumber" text,"replacementBoardSerialNumber" text,                                                                              
                         "rspDateIn" timestamp with time zone,"rspDateOut" timestamp with time zone,"documentType" text,"escalatedRepairType" text,                                                                                                     
                         "escalatedRsp" text,"logisticInBoundShipmentType" integer,"itemCodeOut" text,"logisticOutBoundShipmentType" integer,"pickupArrangedDate" timestamp with time zone,                                                             
                         "pickupDate" timestamp with time zone,"productVersionIn" text,"productVersionOut" text,"project" text,"qaTimeStamp" timestamp with time zone,                                                                                  
                         "quotationStartDate" timestamp with time zone,"quotationEndDate" timestamp with time zone,"quotationStatusCode" integer,                                                                                                       
                         "rmaNumber" text,"shippedFrom" text,"shippedTo" text,"shopId" text,"shopInDate" timestamp with time zone,"shopOutDate" timestamp with time zone,                                                                               
                         "softwareIn" text,"softwareOut" text,"solutionAwaitedCode" integer,"specialProjectNumber" text,"supportPartnerTicketId" text,"warrantyNumber" text,                                                                            
                         "errorList" text,"insertedIntoDb" boolean,"uniqueId" text, "custom_1" text, "custom_2" text, "custom_3" text, "custom_4" text,                                                                                                 
                         "custom_5" text, "custom_6" text, "custom_7" text, "custom_8" text, "custom_9" text, "custom_10" text,                                                                                                                         
                         "repairTimestamp" timestamp with time zone, "reportDate" timestamp with time zone, "returnDate" timestamp with time zone,                                                                                                      
                         "transactionCode" integer, "deductible" json, "accidentId" text, "additionalService" text, "certificateNumber" text,                                                                                                           
                         "claimCreationDate" timestamp with time zone, "collectDeductible" boolean, "collectDevicePackaging" boolean, "commentary" text,                                                                                                
                         "customerPassportCountry" text, "customerPassportNumber" text, "damagedType" text, "deviceDateOfPurchase" timestamp with time zone,                                                                                            
                         "deviceConfiguration" text, "deviceValue" numeric(18,2), "deviceValueCurrency" text, "employeeNumber" text, "insuranceBroker" text,                                                                                            
                         "insuranceCoverage" text, "insuranceEndDate" timestamp with time zone, "insuranceStartDate" timestamp with time zone,                                                                                                          
                         "deviceInvoiceNumber" text, "loanPhone" boolean, "deviceManufactureDate" timestamp with time zone, "maxRepairCost" numeric(18,2),                                                                                              
                         "maxRepairCostCurrency" text, "providerOrCarrier" text, "replacementType" text, "salePrice" numeric(18,2), "salePriceCurrency" text,                                                                                           
                         "specialInstructions" text, "taxId" text, "transportInsr" boolean, "transportInsrCurrency" text, "transportInsrValue" numeric(18,2),                                                                                           
                         "partnerJobNumber" text, "claimId" text, "claimType" text, "logisticInBoundAwb" text, "logisticOutBoundAwb" text,                                                                                                              
                         "quotationCurrency" text, "quotationAmount" numeric(18,2), "cid" boolean, "actionCode" json,                                                                                                                                   
                         "billingCustomerAddressLine1" text,"billingCustomerAddressLine2" text,"billingCustomerCity" text,"billingCustomerState" text,"billingCustomerZip" text,"billingCustomerCountry" text,                                          
                         "insuranceProductName" text, "insurancePolicyNumber" text, "claimLineId" text);                                                                                                                                                
                                                                                                                                                                                                                                                        
         drop table if exists tmp_errorlistjson;                                                                                                                                                                                                        
         create temp table tmp_errorlistjson("id" serial,"uniqueId" text,"errorCode" text, "errorMessage" text, "errorColumn" text, "errorType" text, "successFlag" boolean );                                                                          
                                                                                                                                                                                                                                                        
         insert into tmp_updatejobjsondata("jobNumber" ,"claimingStatus" ,"repairStatus" ,"repairStatus2",                                                                                                                                              
                                         "logisticInBoundCourierName" ,"logisticOutBoundCourierName" ,"customerVisitDate" ,                                                                                                                             
                                         "completionDate" ,"oem" ,"damagedModel" ,"damagedSku" ,"damagedImei" ,                                                                                                                                         
                                         "damagedImei2" ,"damagedSerialNumber" ,"replacementOem" ,"replacementModel" ,"replacementSku" ,                                                                                                                
                                         "replacementImei" ,"replacementImei2" ,"replacementSerialNumber" , "warranty" ,"customerName" ,                                                                                                                
                                         "customerEmail", "customerId", "customerHomePhone" ,"customerMobile" ,"customerAddressLine1" ,"customerAddressLine2",                                                                                          
                                         "customerCity" ,"customerZip" ,"customerState" ,"customerCountry" ,                                                                                                                                            
                                         "deviceBer" ,"accidentValid" ,"docImeiOk" ,"docInvoiceNumberOk" ,"docInvoicePrice" ,"docInvoiceDateOk" ,                                                                                                       
                                         "docSigned" ,"deductibleReceipt" ,"deviceIrrepairable" ,"repairStatusUpdate" ,                                                                                                                                 
                                         "repairStatus2Update" ,"repairDescription" ,"accidentDescription" ,"problemFoundCode" ,                                                                                                                        
                                         "problemFoundCodeSecondary" ,"materialAwaiting","materialUsed","damagedBoardSerialNumber" ,"replacementBoardSerialNumber" ,                                                                                    
                                         "rspDateIn" ,"rspDateOut" ,"documentType" ,"escalatedRepairType" ,                                                                                                                                             
                                         "escalatedRsp" ,"logisticInBoundShipmentType" ,"itemCodeOut" ,"logisticOutBoundShipmentType" ,"pickupArrangedDate" ,                                                                                           
                                         "pickupDate" ,"productVersionIn" ,"productVersionOut" ,"project", "qaTimeStamp",                                                                                                                               
                                         "quotationStartDate" ,"quotationEndDate" ,"quotationStatusCode",                                                                                                                                               
                                         "rmaNumber" ,"shippedFrom" ,"shippedTo" ,"shopId" ,"shopInDate" ,"shopOutDate", "softwareIn", "softwareOut" ,                                                                                                  
                                         "solutionAwaitedCode" ,"specialProjectNumber" ,"supportPartnerTicketId" ,"warrantyNumber",                                                                                                                     
                                         "errorList","insertedIntoDb","uniqueId", "custom_1", "custom_2", "custom_3", "custom_4", "custom_5", "custom_6",                                                                                               
                                         "custom_7", "custom_8", "custom_9", "custom_10", "repairTimestamp", "reportDate", "returnDate", "transactionCode",                                                                                             
                                         "deductible", "accidentId","additionalService","certificateNumber","claimCreationDate","collectDeductible",                                                                                                    
                                         "collectDevicePackaging","commentary","customerPassportCountry","customerPassportNumber","damagedType",                                                                                                        
                                         "deviceDateOfPurchase","deviceConfiguration","deviceValue","deviceValueCurrency","employeeNumber","insuranceBroker",                                                                                           
                                         "insuranceCoverage","insuranceEndDate","insuranceStartDate","deviceInvoiceNumber","loanPhone","deviceManufactureDate",                                                                                         
                                         "maxRepairCost","maxRepairCostCurrency","providerOrCarrier","replacementType","salePrice","salePriceCurrency",                                                                                                 
                                         "specialInstructions","taxId","transportInsr","transportInsrCurrency","transportInsrValue","partnerJobNumber",                                                                                                 
                                         "claimId", "claimType", "logisticInBoundAwb", "logisticOutBoundAwb", "quotationCurrency", "quotationAmount", "cid", "actionCode",                                                                              
                                         "billingCustomerAddressLine1","billingCustomerAddressLine2","billingCustomerCity","billingCustomerState","billingCustomerZip","billingCustomerCountry",                                                        
                                         "insuranceProductName","insurancePolicyNumber","claimLineId")                                                                                                                                                  
                                                                                                                                                                                                                                                        
         select * from json_to_recordset(arrayjobs::json) as ("jobNumber" text,"claimingStatus" text,"repairStatus" text,"repairStatus2" integer,                                                                                                       
                         "logisticInBoundCourierName" text,"logisticOutBoundCourierName" text,"customerVisitDate" timestamp with time zone,                                                                                                             
                         "completionDate" timestamp with time zone,"oem" text,"damagedModel" text,"damagedSku" text,"damagedImei" text,                                                                                                                 
                         "damagedImei2" text,"damagedSerialNumber" text,"replacementOem" text,"replacementModel" text,"replacementSku" text,                                                                                                            
                         "replacementImei" text,"replacementImei2" text,"replacementSerialNumber" text, "warranty" boolean,"customerName" text,                                                                                                         
                         "customerEmail" text, "customerId" text, "customerHomePhone" text,"customerMobile" text,"customerAddressLine1" text,                                                                                                           
                         "customerAddressLine2" text, "customerCity" text,"customerZip" text,"customerState" text,"customerCountry" text,                                                                                                               
                         "deviceBer" boolean,"accidentValid" boolean,"docImeiOk" boolean,"docInvoiceNumberOk" boolean,"docInvoicePrice" boolean,"docInvoiceDateOk" boolean,                                                                             
                         "docSigned" boolean,"deductibleReceipt" boolean,"deviceIrrepairable" boolean,"repairStatusUpdate" timestamp with time zone,                                                                                                    
                         "repairStatus2Update" timestamp with time zone,"repairDescription" text,"accidentDescription" text,"problemFoundCode" json,                                                                                                    
                         "problemFoundCodeSecondary" json,"materialAwaiting" json,"materialUsed" json,"damagedBoardSerialNumber" text,"replacementBoardSerialNumber" text,                                                                              
                         "rspDateIn" timestamp with time zone,"rspDateOut" timestamp with time zone,"documentType" text,"escalatedRepairType" text,                                                                                                     
                         "escalatedRsp" text,"logisticInBoundShipmentType" integer,"itemCodeOut" text,"logisticOutBoundShipmentType" integer,"pickupArrangedDate" timestamp with time zone,                                                             
                         "pickupDate" timestamp with time zone,"productVersionIn" text,"productVersionOut" text,"project" text,"qaTimeStamp" timestamp with time zone,                                                                                  
                         "quotationStartDate" timestamp with time zone,"quotationEndDate" timestamp with time zone,"quotationStatusCode" integer,                                                                                                       
                         "rmaNumber" text,"shippedFrom" text,"shippedTo" text,"shopId" text,"shopInDate" timestamp with time zone,"shopOutDate" timestamp with time zone,                                                                               
                         "softwareIn" text,"softwareOut" text,"solutionAwaitedCode" integer,"specialProjectNumber" text,"supportPartnerTicketId" text,"warrantyNumber" text,                                                                            
                         "errorList" text,"insertedIntoDb" boolean,"uniqueId" text,                                                                                                                                                                     
                         "custom_1" text, "custom_2" text, "custom_3" text, "custom_4" text, "custom_5" text,                                                                                                                                           
                         "custom_6" text, "custom_7" text, "custom_8" text, "custom_9" text, "custom_10" text,                                                                                                                                          
                         "repairTimestamp" timestamp with time zone, "reportDate" timestamp with time zone, "returnDate" timestamp with time zone,                                                                                                      
                         "transactionCode" integer, "deductible" json, "accidentId" text, "additionalService" text, "certificateNumber" text,                                                                                                           
                         "claimCreationDate" timestamp with time zone, "collectDeductible" boolean, "collectDevicePackaging" boolean, "commentary" text,                                                                                                
                         "customerPassportCountry" text, "customerPassportNumber" text, "damagedType" text, "deviceDateOfPurchase" timestamp with time zone,                                                                                            
                         "deviceConfiguration" text, "deviceValue" numeric(18,2), "deviceValueCurrency" text, "employeeNumber" text, "insuranceBroker" text,                                                                                            
                         "insuranceCoverage" text, "insuranceEndDate" timestamp with time zone, "insuranceStartDate" timestamp with time zone,                                                                                                          
                         "deviceInvoiceNumber" text, "loanPhone" boolean, "deviceManufactureDate" timestamp with time zone, "maxRepairCost" numeric(18,2),                                                                                              
                         "maxRepairCostCurrency" text, "providerOrCarrier" text, "replacementType" text, "salePrice" numeric(18,2), "salePriceCurrency" text,                                                                                           
                         "specialInstructions" text, "taxId" text, "transportInsr" boolean, "transportInsrCurrency" text, "transportInsrValue" numeric(18,2),                                                                                           
                         "partnerJobNumber" text, "claimId" text, "claimType" text, "logisticInBoundAwb" text, "logisticOutBoundAwb" text,                                                                                                              
                         "quotationCurrency" text, "quotationAmount" numeric(18,2), "cid" boolean, "actionCode" json,                                                                                                                                   
                         "billingCustomerAddressLine1" text,"billingCustomerAddressLine2" text,"billingCustomerCity" text,"billingCustomerState" text,"billingCustomerZip" text,"billingCustomerCountry" text,                                          
                         "insuranceProductName" text,"insurancePolicyNumber" text, "claimLineId" text);                                                                                                                                                 
                                                                                                                                                                                                                                                        
         FOR job IN (select * from tmp_updatejobjsondata)                                                                                                                                                                                               
         LOOP                                                                                                                                                                                                                                           
                 INSERT INTO tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                                                       
                 SELECT * FROM json_to_recordset(job."errorList"::json) as ("uniqueId" text,"errorCode" text, "errorMessage" text, "errorColumn" text, "errorType" text, "successFlag" boolean);                                                        
                                                                                                                                                                                                                                                        
                 FOR recordCheck IN (SELECT * FROM tr_rule where is_active=true and db_level=true and event_type ='update' order by 1)                                                                                                                  
                 LOOP                                                                                                                                                                                                                                   
                         --=======check damagedIMEI job is already open or not in system========                                                                                                                                                        
                         if (recordCheck."code" = 'SRTU00066') then                                                                                                                                                                                     
                                 if (job."damagedImei" is not null and job."damagedImei" != '') then                                                                                                                                                    
                                                                                                                                                                                                                                                        
                                         count_flag := (select count(imei_number_in) as value from job_head_new where                                                                                                                                   
                                                                         imei_number_in = job."damagedImei" and is_active=true and                                                                                                                      
                                                                         repair_status not in ('90','100') and b2x_job_number != job."jobNumber" );                                                                                                     
                                                                                                                                                                                                                                                        
                                         if (count_flag > 0) then                                                                                                                                                                                       
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         End if;                                                                                                                                                                                                        
                                 End if;                                                                                                                                                                                                                
                         End if;                                                                                                                                                                                                                        
                         --=======check job number is already close system========                                                                                                                                                                      
                         if (recordCheck."code" = 'SRTU00011') then                                                                                                                                                                                     
                                 if (job."jobNumber" is not null and job."jobNumber" != '') then                                                                                                                                                        
                                         jobclose_flag := (select count(b2x_job_number) from job_head_new where b2x_job_number = job."jobNumber" and is_active=true                                                                                     
                                         and (repair_status in ('90') or (repair_status in ('100') and job."repairStatus" not in ('13','80','90'))));                                                                                                   
                                         if (jobclose_flag > 0) then                                                                                                                                                                                    
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         End if;                                                                                                                                                                                                        
                                 End if;                                                                                                                                                                                                                
                         End if;                                                                                                                                                                                                                        
                         --=======check job number is exist in system or not========                                                                                                                                                                    
                         if (recordCheck."code" = 'SRTU00013') then                                                                                                                                                                                     
                                 --raise notice 'asd %', (job."jobNumber" is not null or job."jobNumber" != '') and (length(job."jobNumber") > 0);                                                                                                      
                                 if ((job."jobNumber" is not null or job."jobNumber" != '') and (length(job."jobNumber") > 0)) then                                                                                                                     
                                         checkjob_flag := (select count(b2x_job_number) from job_head_new where b2x_job_number = job."jobNumber" and is_active=true);                                                                                   
                                         if (checkjob_flag = 0) then                                                                                                                                                                                    
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         End if;                                                                                                                                                                                                        
                                 End if;                                                                                                                                                                                                                
                         End if;                                                                                                                                                                                                                        
                         -- --=======check repair Service Partner Id rule========                                                                                                                                                                       
 --                      if (recordCheck."code" = 'SRTU00021') then                                                                                                                                                                                     
 --                              if (job."repairServicePartnerId" is not null and job."repairServicePartnerId" != '') then                                                                                                                              
 --                                      --=======check repairServicePartnerId in table================                                                                                                                                                 
 --                                      check_rsp_id := (select count(1) from mst_rsp where lower(rsp_id) = lower(job."repairServicePartnerId") and is_active = true);                                                                                 
 --                                      if (check_rsp_id = 0) then                                                                                                                                                                                     
 --                                              insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
 --                                              values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
 --                                      end if;                                                                                                                                                                                                        
 --                              End if;                                                                                                                                                                                                                
 --                      ENd if;                                                                                                                                                                                                                        
                         --=======check damagedImei is same with create request or not========                                                                                                                                                          
                         if (recordCheck."code" = 'SRTU00026') then                                                                                                                                                                                     
                                 select imei_number_in INTO old_damaged_imei from job_head_new where b2x_job_number = job."jobNumber" and is_active=true;                                                                                               
                                 if (job."damagedImei" != old_damaged_imei) then                                                                                                                                                                        
                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                               
                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                           
                                 End if;                                                                                                                                                                                                                
                         End if;                                                                                                                                                                                                                        
                         --=======check device Manufacture Date rule========                                                                                                                                                                            
                         IF (recordCheck."code" = 'SRTU00017') THEN                                                                                                                                                                                     
                                 IF (job."deviceManufactureDate" is not null) THEN                                                                                                                                                                      
                                         --=======check device Manufacture Date in table================                                                                                                                                                
                                         IF ((job."deviceManufactureDate"::date) > (now()::date)) THEN                                                                                                                                                  
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check device Date Of Purchase rule========                                                                                                                                                                            
                         IF (recordCheck."code" = 'SRTU00018') THEN                                                                                                                                                                                     
                                 IF (job."deviceDateOfPurchase" is not null) THEN                                                                                                                                                                       
                                         --=======check device Date Of Purchase  in table================                                                                                                                                               
                                         IF ((job."deviceDateOfPurchase"::date) > (now()::date)) THEN                                                                                                                                                   
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check rspDateOut rule========                                                                                                                                                                                         
                         IF (recordCheck."code" = 'SRTU00019') THEN                                                                                                                                                                                     
                                 IF (job."rspDateOut" is not null) THEN                                                                                                                                                                                 
                                 --=======check rspDateOut in table================                                                                                                                                                                     
                                         IF ((job."rspDateOut"::date) > (now()::date)) THEN                                                                                                                                                             
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check deviceManufactureDate & deviceDateOfPurchase rule========                                                                                                                                                       
                         IF (recordCheck."code" = 'SRTU00022') THEN                                                                                                                                                                                     
                                 IF (job."deviceManufactureDate" is not null and job."deviceDateOfPurchase" is not null) THEN                                                                                                                           
                                         --=======check deviceManufactureDate & deviceDateOfPurchase in table================                                                                                                                           
                                         IF ((job."deviceManufactureDate"::date) > (job."deviceDateOfPurchase"::date)) THEN                                                                                                                             
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check completionDate rule========                                                                                                                                                                                     
                         IF (recordCheck."code" = 'SRTU00024') THEN                                                                                                                                                                                     
                                 IF (job."completionDate" is not null) THEN                                                                                                                                                                             
                                         --=======check device Date Of Purchase  in table================                                                                                                                                               
                                         IF ((job."completionDate"::date) > (now()::date)) THEN                                                                                                                                                         
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check completionDate & rspDateOut rule========                                                                                                                                                                        
                         IF (recordCheck."code" = 'SRTU00027') THEN                                                                                                                                                                                     
                                 IF (job."rspDateOut" is not null and job."completionDate" is not null) THEN                                                                                                                                            
                                         --=======check completionDate & pickupDate in table================                                                                                                                                            
                                         IF ((job."completionDate"::date) > (job."rspDateOut"::date)) THEN                                                                                                                                              
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check transaction code rule========                                                                                                                                                                                   
                         if (recordCheck."code" = 'SRTU00039') THEN                                                                                                                                                                                     
                                 if (job."transactionCode" is not null) then                                                                                                                                                                            
                                         --=======check transactionCode in table================                                                                                                                                                        
                                         if ((select * from public.check_in_routing_table('mst_transaction_code','b2x_transaction_code',ARRAY[job."transactionCode"::text])) = 0) then                                                                  
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                         -- check_transaction_code := (select count(1) from mst_transaction_code where b2x_transaction_code = job."transactionCode" and is_active = true);                                                              
                                         --if (check_transaction_code = 0) then                                                                                                                                                                         
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         --END IF;                                                                                                                                                                                                      
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check claim type rule========                                                                                                                                                                                         
                         if (recordCheck."code" = 'SRTU00040') THEN                                                                                                                                                                                     
                                 if (job."claimType" is not null) then                                                                                                                                                                                  
                                         --=======check claimType in table================                                                                                                                                                              
                                         if ((select * from public.check_in_routing_table('mst_claim_type','claim_code',ARRAY[job."claimType"])) = 0) then                                                                                              
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                         -- check_claim_type := (select count(1) from mst_claim_type where lower(claim_code) = lower(job."claimType") and is_active = true);                                                                            
                                         -- if (check_claim_type = 0) then                                                                                                                                                                              
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         -- END IF;                                                                                                                                                                                                     
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check claim type rule========                                                                                                                                                                                         
                         if (recordCheck."code" = 'SRTU00043') THEN                                                                                                                                                                                     
                                 if (job."repairStatus" is not null) then                                                                                                                                                                               
                                         --=======check repairStatus in table================                                                                                                                                                           
                                         if ((select * from public.check_in_routing_table('mst_repair_status','b2x_code',ARRAY[job."repairStatus"])) = 0) then                                                                                          
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                         --check_repair_status := (select count(1) from mst_repair_status where b2x_code = job."repairStatus" and is_active = true);                                                                                    
                                         --if (check_repair_status = 0) then                                                                                                                                                                            
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         --END IF;                                                                                                                                                                                                      
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         --=======check actionCode rule========                                                                                                                                                                                         
                         if (recordCheck."code" = 'SRTU00047') then                                                                                                                                                                                     
                                 if ((select * from public.check_in_routing_table('mst_action_code','b2x_action_code',(select array_agg(elm) from  json_array_elements_text(job."actionCode") as elm))) = 0) then                                       
                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                               
                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                           
                                 END IF;                                                                                                                                                                                                                
                                                                                                                                                                                                                                                        
                                 --if ((select COUNT(value) from json_array_elements_text(job."actionCode")) !=                                                                                                                                         
                                 --(select COUNT(b2x_action_code) from mst_action_code where b2x_action_code IN (                                                                                                                                       
                                 --      select value from json_array_elements_text(job."actionCode")                                                                                                                                                   
                                 --      ) and is_active = true)) then                                                                                                                                                                                  
                                 --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                               
                                 --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                           
                                 --END IF;                                                                                                                                                                                                              
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                                        
                         --=======check actionCode rule========                                                                                                                                                                                         
                         if (recordCheck."code" = 'SRTU00054') THEN                                                                                                                                                                                     
                                 FOR materialUsed IN                                                                                                                                                                                                    
                                         select distinct "payer" from json_to_recordset(job."materialUsed"::json) as ("payer" integer)                                                                                                                  
                                 LOOP                                                                                                                                                                                                                   
                                         if ((select * from public.check_in_routing_table('mst_payer','code',ARRAY[materialUsed."payer"::text])) = 0) then                                                                                              
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                                 exit;                                                                                                                                                                                                  
                                         END IF;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                         --if not exists(select id from mst_payer where code = materialUsed."payer" and is_active = true) then                                                                                                          
                                         --      insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                         --      values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         --      exit;                                                                                                                                                                                                  
                                         --end if;                                                                                                                                                                                                      
                                 END LOOP;                                                                                                                                                                                                              
                         END IF;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         --=======check logistic inbound shipment type========                                                                                                                                                                          
                         if (recordCheck."code" = 'SRTU00073') THEN                                                                                                                                                                                     
                                 if (job."logisticInBoundShipmentType" is not null) then                                                                                                                                                                
                                         if ((select * from public.check_in_routing_table('mst_logistic_status','logistics_code',ARRAY[job."logisticInBoundShipmentType"::text])) = 0) then                                                             
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         --=======check problem found code========                                                                                                                                                                                      
                         if (recordCheck."code" = 'SRTU00074') THEN                                                                                                                                                                                     
                                 if (job."problemFoundCode" is not null) then                                                                                                                                                                           
                                         if ((select * from public.check_in_routing_table('mst_problem_found','b2x_code',(select array_agg(elm) from  json_array_elements_text(job."problemFoundCode") as elm))) = 0) then                              
                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                               
                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                           
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         --=======check repair status 2 code========                                                                                                                                                                                    
                         if (recordCheck."code" = 'SRTU00075') THEN                                                                                                                                                                                     
                                 if (job."repairStatus2" is not null) then                                                                                                                                                                              
                                         if ((select * from public.check_in_routing_table('mst_second_status','b2x_code',ARRAY[job."repairStatus2"::text])) = 0) then                                                                                   
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         --=======check document type code========                                                                                                                                                                                      
                         if (recordCheck."code" = 'SRTU00076') THEN                                                                                                                                                                                     
                                 if (job."documentType" is not null) then                                                                                                                                                                               
                                         if ((select * from public.check_in_routing_table('mst_document_type','b2x_code',ARRAY[job."documentType"])) = 0) then                                                                                          
                                                 insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                                       
                                                 values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                                   
                                         END IF;                                                                                                                                                                                                        
                                 END IF;                                                                                                                                                                                                                
                         END IF;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         if (recordCheck."code" = 'SRTU00078') then                                                                                                                                                                                     
                                 --=======check actionCode in table========                                                                                                                                                                             
                                 if ((select count(1) from json_array_elements_text(job."actionCode")) > 0) then                                                                                                                                        
                                                                                                                                                                                                                                                        
                                         FOR chkActionCode IN                                                                                                                                                                                           
                                                 select value from json_array_elements_text(job."actionCode")                                                                                                                                           
                                         LOOP                                                                                                                                                                                                           
                                                 if exists ((select b2x_action_code from mst_action_code where                                                                                                                                          
                                                 ((b2x_action_code::integer between 20 and 29) or (b2x_action_code::integer between 60 and 69))                                                                                                         
                                                 and b2x_action_code = chkActionCode.value)                                                                                                                                                             
                                                 ) and job."repairStatus" in ('60') then                                                                                                                                                                
                                                                                                                                                                                                                                                        
                                                         FOR chkMaterialUsed IN                                                                                                                                                                         
                                                                 select "materialNumber" from json_to_recordset(job."materialUsed"::json) as ("materialNumber" text)                                                                                    
                                                         LOOP                                                                                                                                                                                           
                                                                                                                                                                                                                                                        
                                                                 if (chkMaterialUsed."materialNumber" is not null or chkMaterialUsed."materialNumber"::text != '') then                                                                                 
                                                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                               
                                                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                           
                                                                         exit;                                                                                                                                                                          
                                                                 END IF;                                                                                                                                                                                
                                                                                                                                                                                                                                                        
                                                         END LOOP;                                                                                                                                                                                      
                                                                                                                                                                                                                                                        
                                                         --========if got error then throw out from loop==========                                                                                                                                      
                                                         exit;                                                                                                                                                                                          
                                                 end if;                                                                                                                                                                                                
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                         END LOOP;                                                                                                                                                                                                      
                                                                                                                                                                                                                                                        
                                 End If;                                                                                                                                                                                                                
                                                                                                                                                                                                                                                        
                         END IF;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         if (recordCheck."code" = 'SRTU00079') then                                                                                                                                                                                     
                                                                                                                                                                                                                                                        
                                 FOR chkMaterialUsed2 IN                                                                                                                                                                                                
                                         select "materialNumber" from json_to_recordset(job."materialUsed"::json) as ("materialNumber" text)                                                                                                            
                                 LOOP                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                        
                                         if (chkMaterialUsed2."materialNumber" is not null and chkMaterialUsed2."materialNumber"::text != '') then                                                                                                      
                                         --=======check part material in routing table========                                                                                                                                                          
                                                 if not exists(select part_code from mst_part where trim(part_code)=trim(chkMaterialUsed2."materialNumber")) then                                                                                       
                                                                                                                                                                                                                                                        
                                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                               
                                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                           
                                                         exit;                                                                                                                                                                                          
                                                                                                                                                                                                                                                        
                                                  end if;                                                                                                                                                                                               
                                         END IF;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                 END LOOP;                                                                                                                                                                                                              
                                                                                                                                                                                                                                                        
                         end if;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         if (recordCheck."code" = 'SRTU00080') then                                                                                                                                                                                     
                                                                                                                                                                                                                                                        
                                 FOR chkMaterialUsed2 IN                                                                                                                                                                                                
                                         select "materialNumber" from json_to_recordset(job."materialUsed"::json) as ("materialNumber" text)                                                                                                            
                                 LOOP                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                        
                                         if (chkMaterialUsed2."materialNumber" is not null or chkMaterialUsed2."materialNumber"::text != '') then                                                                                                       
                                         --=======check part material in routing table========                                                                                                                                                          
                                                 if exists(select part_code from mst_part where trim(part_code)=trim(chkMaterialUsed2."materialNumber")                                                                                                 
                                                                                 and part_grouping in ('Main board','Sub Board')) and job."repairStatus" in ('60')                                                                                      
                                                                                 and (job."replacementImei" is null or job."replacementImei" = '') then                                                                                                 
                                                                                                                                                                                                                                                        
                                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                               
                                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                           
                                                         exit;                                                                                                                                                                                          
                                                                                                                                                                                                                                                        
                                                  end if;                                                                                                                                                                                               
                                         END IF;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                 END LOOP;                                                                                                                                                                                                              
                                                                                                                                                                                                                                                        
                         end if;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         if (recordCheck."code" = 'SRTU00081') then                                                                                                                                                                                     
                                                                                                                                                                                                                                                        
                                 FOR chkMaterialUsed2 IN                                                                                                                                                                                                
                                         select "materialNumber" from json_to_recordset(job."materialUsed"::json) as ("materialNumber" text)                                                                                                            
                                 LOOP                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                        
                                         if (chkMaterialUsed2."materialNumber" is not null or chkMaterialUsed2."materialNumber"::text != '') then                                                                                                       
                                         --=======check part material in routing table========                                                                                                                                                          
                                                 if exists(select part_code from mst_part where trim(part_code)=trim(chkMaterialUsed2."materialNumber")                                                                                                 
                                                                                 and part_grouping in ('Main board','Sub Board')) and job."repairStatus" in ('60')                                                                                      
                                                                                 and (job."replacementSerialNumber" is null or job."replacementImei" = '') then                                                                                         
                                                                                                                                                                                                                                                        
                                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                               
                                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                           
                                                         exit;                                                                                                                                                                                          
                                                                                                                                                                                                                                                        
                                                  end if;                                                                                                                                                                                               
                                         END IF;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                 END LOOP;                                                                                                                                                                                                              
                                                                                                                                                                                                                                                        
                         end if;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                         if (recordCheck."code" = 'SRTU00082') then                                                                                                                                                                                     
                                                                                                                                                                                                                                                        
                                 FOR chkMaterialUsed2 IN                                                                                                                                                                                                
                                         select "materialNumber" from json_to_recordset(job."materialUsed"::json) as ("materialNumber" text)                                                                                                            
                                 LOOP                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                        
                                         if (chkMaterialUsed2."materialNumber" is not null or chkMaterialUsed2."materialNumber"::text != '') then                                                                                                       
                                         --=======check part material in routing table========                                                                                                                                                          
                                                 if exists(select part_code from mst_part where trim(part_code)=trim(chkMaterialUsed2."materialNumber")                                                                                                 
                                                                                 and part_grouping in ('Main board','Sub Board')) and job."repairStatus" in ('60')                                                                                      
                                                                                 and (job."replacementModel" is null or job."replacementModel" = '') then                                                                                               
                                                                                                                                                                                                                                                        
                                                         insert into tmp_errorlistjson("uniqueId","errorCode", "errorMessage", "errorColumn", "errorType", "successFlag")                                                                               
                                                         values (job."uniqueId",recordCheck."code",recordCheck."name", recordCheck."column_name", recordCheck."type", false);                                                                           
                                                         exit;                                                                                                                                                                                          
                                                                                                                                                                                                                                                        
                                                  end if;                                                                                                                                                                                               
                                         END IF;                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                                 END LOOP;                                                                                                                                                                                                              
                                                                                                                                                                                                                                                        
                         end if;                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                        
                 END LOOP;                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                        
                 --=============insert all the error list in the variable and send to the response=============                                                                                                                                         
                 errorList:= (select array_to_json(array_agg(row_to_json(row)))                                                                                                                                                                         
                             from (                                                                                                                                                                                                                     
                                 select "errorCode", "errorMessage", "errorColumn", "errorType", "successFlag"                                                                                                                                          
                                 from tmp_errorlistjson                                                                                                                                                                                                 
                             ) row);                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                        
                 op_outputjson := op_outputjson || ((select row_to_json(row) from (                                                                                                                                                                     
                                 select job."jobNumber" ,job."claimingStatus" ,job."repairStatus" ,job."repairStatus2",                                                                                                                                 
                                 job."logisticInBoundCourierName" ,job."logisticOutBoundCourierName" ,job."customerVisitDate" ,                                                                                                                         
                                 job."completionDate" ,job."oem" ,job."damagedModel" ,job."damagedSku" ,job."damagedImei" ,                                                                                                                             
                                 job."damagedImei2" ,job."damagedSerialNumber" ,job."replacementOem" ,job."replacementModel" ,job."replacementSku" ,                                                                                                    
                                 job."replacementImei" ,job."replacementImei2" ,job."replacementSerialNumber" ,job. "warranty" ,job."customerName" ,                                                                                                    
                                 job."customerEmail", job."customerId", job."customerHomePhone" ,job."customerMobile" ,job."customerAddressLine1",                                                                                                      
                                 job."customerAddressLine2", job."customerCity", job."customerZip", job."customerState", job."customerCountry" ,                                                                                                        
                                 job."deviceBer" ,job."accidentValid" ,job."docImeiOk" ,job."docInvoiceNumberOk" ,job."docInvoicePrice" ,job."docInvoiceDateOk" ,                                                                                       
                                 job."docSigned" ,job."deductibleReceipt" ,job."deviceIrrepairable" ,job."repairStatusUpdate" ,                                                                                                                         
                                 job."repairStatus2Update" ,job."repairDescription" ,job."accidentDescription" ,job."problemFoundCode",                                                                                                                 
                                 job."problemFoundCodeSecondary" ,job."materialAwaiting" ,job."materialUsed",job."damagedBoardSerialNumber", job."replacementBoardSerialNumber" ,                                                                       
                                 job."rspDateIn" ,job."rspDateOut" ,job."documentType" ,job."escalatedRepairType" ,                                                                                                                                     
                                 job."escalatedRsp" ,job."logisticInBoundShipmentType" ,job."itemCodeOut" ,job."logisticOutBoundShipmentType" ,job."pickupArrangedDate" ,                                                                               
                                 job."pickupDate" ,job."productVersionIn" ,job."productVersionOut" ,job."project" ,job."qaTimeStamp" ,                                                                                                                  
                                 job."quotationStartDate" ,job."quotationEndDate" ,job."quotationStatusCode" ,                                                                                                                                          
                                 job."rmaNumber" ,job."shippedFrom" ,job."shippedTo" ,job."shopId" ,job."shopInDate" ,job."shopOutDate" ,                                                                                                               
                                 job."softwareIn" ,job."softwareOut" ,job."solutionAwaitedCode" ,job."specialProjectNumber" ,job."supportPartnerTicketId" ,job."warrantyNumber",                                                                        
                                 job."custom_1", job."custom_2", job."custom_3", job."custom_4", job."custom_5", job."custom_6",                                                                                                                        
                                 job."custom_7", job."custom_8", job."custom_9", job."custom_10",                                                                                                                                                       
                                 errorList as "errorList", job."claimId", job."insertedIntoDb",                                                                                                                                                         
                                 job."repairTimestamp", job."reportDate", job."returnDate", job."transactionCode", job."deductible",                                                                                                                    
                                 job."accidentId",job."additionalService",job."certificateNumber",job."claimCreationDate",job."collectDeductible",                                                                                                      
                                 job."collectDevicePackaging",job."commentary",job."customerPassportCountry",job."customerPassportNumber",job."damagedType",                                                                                            
                                 job."deviceDateOfPurchase",job."deviceConfiguration",job."deviceValue",job."deviceValueCurrency",job."employeeNumber",                                                                                                 
                                 job."insuranceBroker",job."insuranceCoverage",job."insuranceEndDate",job."insuranceStartDate",job."deviceInvoiceNumber",job."loanPhone",                                                                               
                                 job."deviceManufactureDate",job."maxRepairCost",job."maxRepairCostCurrency",job."providerOrCarrier",job."replacementType",job."salePrice",                                                                             
                                 job."salePriceCurrency",job."specialInstructions",job."taxId",job."transportInsr",job."transportInsrCurrency",                                                                                                         
                                 job."transportInsrValue", job."partnerJobNumber", job."claimType", job."logisticInBoundAwb", job."logisticOutBoundAwb",                                                                                                
                                 job."quotationCurrency", job."quotationAmount", job."cid", job."actionCode",                                                                                                                                           
                                 job."billingCustomerAddressLine1",job."billingCustomerAddressLine2",job."billingCustomerCity",job."billingCustomerState",job."billingCustomerZip",job."billingCustomerCountry",                                        
                                 job."insuranceProductName",job."insurancePolicyNumber",job."claimLineId") row) || ',');                                                                                                                                
                                                                                                                                                                                                                                                        
         END LOOP;                                                                                                                                                                                                                                      
         --RAISE NOTICE '%', op_outputjson;                                                                                                                                                                                                             
         return trim(trailing ',' from op_outputjson);                                                                                                                                                                                                  
End
$function$
